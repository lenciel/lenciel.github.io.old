<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@Lenciel]]></title>
  <link href="http://lenciel.cn/atom.xml" rel="self"/>
  <link href="http://lenciel.cn/"/>
  <updated>2014-09-03T01:07:32+08:00</updated>
  <id>http://lenciel.cn/</id>
  <author>
    <name><![CDATA[Lenciel Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[T-shirt Testing]]></title>
    <link href="http://lenciel.cn/2014/09/logo-test/"/>
    <updated>2014-09-03T01:04:48+08:00</updated>
    <id>http://lenciel.cn/2014/09/logo-test</id>
    <content type="html"><![CDATA[<p>感受一下，哪个印出来比较好看呢…</p>

<p><img src="http://lenciel.cn/downloads/images/2014_09/logo1.png" alt="Vhost threshold" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/2014_09/logo2.png" alt="Vhost threshold" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/2014_09/logo3.png" alt="Vhost threshold" title="Don't touch me..." /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[update android sdk with shadowsocks proxy]]></title>
    <link href="http://lenciel.cn/2014/09/update-android-sdk-with-proxy/"/>
    <updated>2014-09-02T02:30:35+08:00</updated>
    <id>http://lenciel.cn/2014/09/update-android-sdk-with-proxy</id>
    <content type="html"><![CDATA[<p>博格坎普说，我们android项目的build挂了。</p>

<p>去Jenkins看了一下，日志里面的错误是：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[android] $ /usr/local/share/gradle-1.11/bin/gradle clean build
</span><span class="line">Creating properties on demand (a.k.a. dynamic properties) has been deprecated and is scheduled to be removed in Gradle 2.0. Please read http://gradle.org/docs/current/dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html for information on the replacement for dynamic properties.
</span><span class="line">Deprecated dynamic property: "buildName" on "ProductFlavorDsl_Decorated{name=main, minSdkVersion=null, targetSdkVersion=null, renderscriptTargetApi=-1, renderscriptSupportMode=null, renderscriptNdkMode=null, versionCode=-1, versionName=null, applicationId=null, testApplicationId=null, testInstrumentationRunner=null, testHandleProfiling=null, testFunctionalTest=null, signingConfig=null, resConfig=null}", value: "1.0.97".
</span><span class="line">
</span><span class="line">FAILURE: Build failed with an exception.
</span><span class="line">
</span><span class="line">* What went wrong:
</span><span class="line">A problem occurred configuring project ':app'.
</span><span class="line">&gt; Could not resolve all dependencies for configuration ':app:_debugCompile'.
</span><span class="line">   &gt; Could not find com.android.support:appcompat-v7:20.0.0.
</span><span class="line">     Required by:
</span><span class="line">         android:app:unspecified
</span><span class="line">
</span><span class="line">* Try:
</span><span class="line">Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.s</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这其实在天朝是蛮常见的现象，因为<code>dl-ssl.google.com</code>被封了，所以你总是会因为下面的错误无法更新Android的SDK：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">Failed connect to dl-ssl.google.com:443;
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="jenkins">Jenkins服务器配置代理</h2>

<p>这里之所以选择<a href="http://shadowsocks.org/">shadowsocks</a>，是因为可以用自己在<a href="https://developers.google.com/appengine/">Google的VM</a>上配置的shadowsocks代理服务器（顺便广告一下，Google的VM在做活动，几乎是最高配的机器都不要钱，而且第一跳就在美帝，用来做代理非常爽）。</p>

<p>安装shadowsocks的pythohn client:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>pip install shadowsocks
</span><span class="line">
</span><span class="line">Downloading/unpacking shadowsocks
</span><span class="line">  Running setup.py egg_info <span class="k">for </span>package shadowsocks
</span><span class="line">
</span><span class="line">    warning: manifest_maker: MANIFEST.in, line 1: <span class="s1">&#39;recursive-include&#39;</span> expects &lt;dir&gt; &lt;pattern1&gt; &lt;pattern2&gt; ...
</span><span class="line">
</span><span class="line">Installing collected packages: shadowsocks
</span><span class="line">  Running setup.py install <span class="k">for </span>shadowsocks
</span><span class="line">
</span><span class="line">    warning: manifest_maker: MANIFEST.in, line 1: <span class="s1">&#39;recursive-include&#39;</span> expects &lt;dir&gt; &lt;pattern1&gt; &lt;pattern2&gt; ...
</span><span class="line">
</span><span class="line">    Installing sslocal script to /usr/local/bin
</span><span class="line">    Installing ssserver script to /usr/local/bin
</span><span class="line">Successfully installed shadowsocks
</span><span class="line">Cleaning up...
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到安装完之后有两个可执行文件，运行其中的<code>sslocal</code>就可以启动shadowsocks的客户端了：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">root@palm4fun-core-1:~/install# sslocal -h
</span><span class="line">usage: sslocal <span class="o">[</span>-h<span class="o">]</span> -s SERVER_ADDR <span class="o">[</span>-p SERVER_PORT<span class="o">]</span>
</span><span class="line">               <span class="o">[</span>-b LOCAL_ADDR<span class="o">]</span> <span class="o">[</span>-l LOCAL_PORT<span class="o">]</span> -k PASSWORD <span class="o">[</span>-m METHOD<span class="o">]</span>
</span><span class="line">               <span class="o">[</span>-t TIMEOUT<span class="o">]</span> <span class="o">[</span>-c CONFIG<span class="o">]</span> <span class="o">[</span>--fast-open<span class="o">]</span> <span class="o">[</span>-v<span class="o">]</span> <span class="o">[</span>-q<span class="o">]</span>
</span><span class="line">
</span><span class="line">optional arguments:
</span><span class="line">  -h, --help            show this <span class="nb">help </span>message and <span class="nb">exit</span>
</span><span class="line">  -s SERVER_ADDR        server address
</span><span class="line">  -p SERVER_PORT        server port, default: 8388
</span><span class="line">  -b LOCAL_ADDR         <span class="nb">local </span>binding address, default: 127.0.0.1
</span><span class="line">  -l LOCAL_PORT         <span class="nb">local </span>port, default: 1080
</span><span class="line">  -k PASSWORD           password
</span><span class="line">  -m METHOD             encryption method, default: aes-256-cfb
</span><span class="line">  -t TIMEOUT            timeout in seconds, default: 300
</span><span class="line">  -c CONFIG             path to config file
</span><span class="line">  --fast-open           use TCP_FASTOPEN, requires Linux 3.7+
</span><span class="line">  -v, -vv               verbose mode
</span><span class="line">  -q, -qq               quiet mode, only show warnings/errors
</span><span class="line">
</span><span class="line">Online <span class="nb">help</span>: &lt;https://github.com/clowwindy/shadowsocks&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>最简单的办法就是新建一个配置文件：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>~/.shadowconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="s2">&quot;server&quot;</span><span class="o">:</span><span class="s2">&quot;my_server_ip&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;server_port&quot;</span><span class="o">:</span><span class="mi">8388</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;local_port&quot;</span><span class="o">:</span><span class="mi">1080</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;password&quot;</span><span class="o">:</span><span class="s2">&quot;barfoo!&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;timeout&quot;</span><span class="o">:</span><span class="mi">600</span><span class="p">,</span>
</span><span class="line">    <span class="s2">&quot;method&quot;</span><span class="o">:</span><span class="s2">&quot;table&quot;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>记得在防火墙打开你配置的本地端口，然后运行下面的命令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">root@palm4fun-core-1:~/install# sslocal -c ~/.shadowconfig
</span><span class="line">INFO: loading config from /root/.shadowconfig
</span><span class="line">shadowsocks 2.1.0
</span><span class="line">2014-09-02 00:27:53 INFO     starting <span class="nb">local </span>at 127.0.0.1:1080
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="android-sdk">命令行更新android sdk</h2>

<p>先配置java命令使用的代理，然后
从命令行更新android sdk。只需要到tools目录下面去跑(<code>-u</code>是不显示GUI，<code>-s</code>是指定不使用ssl链接)：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span><span class="nb">export </span><span class="nv">_JAVA_OPTIONS</span><span class="o">=</span><span class="s2">&quot;-DsocksProxyHost=127.0.0.1&quot;</span>
</span><span class="line"><span class="nv">$ </span>android update sdk -u -s --all
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>注意<code>socksProxyHost</code>的默认端口就是1080，如果你使用了其他端口不能只配ip。</p>

<p>另外，<code>--all</code>是比较猛烈的选项（人家的硬盘就是大，人家的代理就是快嘛），你可以在命令行里面通过filter来安装你需要的东西。</p>

<h2 id="when-shit-happens">When shit happens</h2>

<p>运行起来之后更新非常慢，可以<code>android</code>命令报timeout，而代理那边打出日志：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">2014-09-02 00:27:53 INFO     starting <span class="nb">local </span>at 127.0.0.1:1080
</span><span class="line">2014-09-02 00:28:04 INFO     connecting 74.125.237.1:80
</span><span class="line">2014-09-02 00:28:04 INFO     connecting 74.125.237.1:80
</span><span class="line">2014-09-02 00:28:04 INFO     connecting 74.125.237.1:80
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>因为本座平时上网也是在用Google VM上的这个代理，没理由这么慢。所以就怀疑那个74.125.237.1的地址是被谁在<code>/etc/hosts</code>里面给配了固定ip。打开一看果然有：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">dl-ssl.google.com 74.125.237.1
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>估计是之前配置的基友搜索到了类似<a href="http://www.programering.com/a/MjM4YTMwATA.html">这样的文章</a>。这也是为什么我从来不用也不推荐别人用修改hosts文件的方法来翻墙的原因：它们总是在过期。</p>

<p>Last but not the least, Fuck you, GFW.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[疤]]></title>
    <link href="http://lenciel.cn/2014/09/everybody-hurts/"/>
    <updated>2014-09-01T03:38:50+08:00</updated>
    <id>http://lenciel.cn/2014/09/everybody-hurts</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/2014_09/choose_who_to_let_in.jpg" alt="careful to choose" title="Be careful to choose..." /></p>

<p>一个朋友最近跟我说，想去把伤口结痂留下的疤痕用液氮处理一下。</p>

<p>这是我第一次听说除开激光这种“极热”之外，还可以在人的身上用这种“极冻”的方式祛疤。</p>

<p>不过，虽然是听起来非常激烈的方式，大概多少也得吃点儿苦头，但能顺利把身上的疤去掉，总是好的。</p>

<p>相比之下，心头的疤就没有那么容易弄掉了：8月28日，孙仲旭老师因为抑郁症自杀辞世的新闻曝出，着实让我心里面咯噔了一下。</p>

<p>这离Robin Williams抑郁而终不过两个多星期。</p>

<p>《1984》、《动物庄园》、《麦田里的守望者》和耶茨的很多小说，其实之前就看过。但后来因为看了孙仲旭老师翻译的《麦田里的守望者》，就把他其他的译作都翻来看了。</p>

<p>现在想来，从他翻译目标的选择来看，本身就是一个很不快乐的人吧。</p>

<p>当然，这很正常。</p>

<p>人虽然从出生开始，都无非是走在通向死亡的道路之上，但每个人经历的过程和心中的念想却大不相同。</p>

<p>有的人很幸运，出生在和谐的家庭，从小就完整地见证过快乐是什么，长大后也顺风顺水，对人生有自己明确的诉求。</p>

<p>而有的人，只见到过碎片一样的生活，自己从来不明白自己活着是需要什么，又能给别人提供什么。</p>

<p>不但如此，还会对那些把幸福或者是快乐挂在嘴边的人呲之以鼻：因为从心底质疑它们是否真的存在。</p>

<p>正是有《麦田里的守望者》这样的小说，正是有Robin Williams这样的演员，正是有孙仲旭老师这样的译者，才让后面这种人明白，自己不是什么奇奇怪怪的东西：原来还有很多人都这样活着，或者是这样活过。</p>

<p>而偏偏也是他们选择了自戕，仿佛在提醒大家：你看，就算知道有这么多人这样活着，我也不知道如何是好。</p>

<p>我想他们不是没有放胆让那些温暖的人走进自己内心，也感受过幸福和快乐。但要习得<a href="http://lenciel.cn/2014/04/rip-marquez/">孤独与爱</a>的要义实在是太难。更何况，抑郁并不仅仅是心理上的问题而已。</p>

<p>最后，摘一段献给孙仲旭老师，Wish you rest in peace：</p>

<blockquote><p>“我知道他死了！你以为我不知道？但是我仍然可以喜欢他，行吗？就因为这人死了，你不可能马上不再喜欢他了，岂有此理 —— 特别当这个人比你认识的活人要好上一千倍时。”</p><footer><strong>《麦田里的守望者》</strong></footer></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How complex your python project is?]]></title>
    <link href="http://lenciel.cn/2014/08/how-complex-your-python-project-is/"/>
    <updated>2014-08-31T21:04:47+08:00</updated>
    <id>http://lenciel.cn/2014/08/how-complex-your-python-project-is</id>
    <content type="html"><![CDATA[<p>最近诸事不顺，却也理所应当。</p>

<p>晚间时段迷上写字和画画，大概是因为之前看<a href="http://www.imdb.com/title/tt0460740/">《Cashback》</a>印象太深刻，觉得这些是美好遗失前力挽狂澜的技艺。</p>

<p>除开纸上涂鸦，还用机器画了不少鸡零狗碎的东西：我想用python画点儿T恤图案，印出来送给大家，给大伙儿同时也给自己打打气。</p>

<p>一开始看中了基于<a href="http://www.graphviz.org/">Graphviz</a>的<a href="http://furius.ca/snakefood/">Snakefood</a>。</p>

<p>最开始接触Graphviz是因为<a href="https://github.com/django-extensions/django-extensions">django-extensions</a>项目用它来画django model的<a href="https://code.djangoproject.com/wiki/DjangoGraphviz">关系图</a>。我们用它冒充ER图，拿去跟那些喜欢看文档但其实又不专业的官僚客户们交差。</p>

<p>Snakefood更进一步，通过分析你的代码依赖，从而得出你代码的“复杂度”。</p>

<p>“复杂度”其实是用“代码行数”衡量码农工作效力被普遍吐槽之后，大公司发明出来折腾工程师的诸多metrics里面还算有点儿用的一个：至少你可以让要接手的人看看这项目大概是个什么规模，以及，大概要挠破几寸头皮才能看懂。</p>

<p>当然，Snakefood这种基于文件依赖的复杂度分析其实不算特别靠谱，这可不是什么<a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity">Cyclomatic complexity</a>，更像是开飞机的时候边排查“事故征兆”边驾驶的辅助工具。作者自己是这么说的：</p>

<blockquote><p>Producing pretty graphs is fun, but I found the most leverage of it when I try to make my code simpler, I generate the graph and inspect unexpected dependencies and try to refactor my code to simply the dependency graph as much as possible.</p><footer><strong>Martin Blais</strong></footer></blockquote>

<p>下面是本座心目中永远的”优雅Python代码第一名”<a href="http://docs.python-requests.org/en/latest/">Requests</a>的分析结果：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_08/requests.png" alt="requests" title="requests dependencies" /></p>

<p>再来看看<a href="https://github.com/django/django">Django</a>的最新版分析结果：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_08/django.png" alt="django" title="django dependencies" /></p>

<p>下面是本座最近撸完的一个项目，印到衣服上感觉还好吧：
<img src="http://lenciel.cn/downloads/images/2014_08/yawp.png" alt="yawp" title="yawp dependencies" /></p>

<h2 id="section">结论</h2>

<p>首先，本座挺喜欢Snakefood那种Unix范儿的：所有的命令都可以给其他命令来一管，比如：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">sfood ./src | sfood-graph -p | dot -Tps | pstopdf -i -o ./1.pdf
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>其次，本座开始计划是给每个人生成一个他们自己写的模块的依赖图，印到衣服上让大家自己穿。但试了之前几个项目之后，Hmmmm…有的同学大概是不会愿意的吧…</p>

<p>最后，T恤计划也没这么就打住：后来又发现了<a href="http://nodebox.net/">nodebox</a>这种真正是拿来搞艺术的玩意儿，于是要生成一点儿敢往自己胸口放的东西变得方便多了，过两天如果公司没有倒闭，就把东西放出来让大家看看。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[突然事件]]></title>
    <link href="http://lenciel.cn/2014/08/but-does-it-flow/"/>
    <updated>2014-08-21T03:54:13+08:00</updated>
    <id>http://lenciel.cn/2014/08/but-does-it-flow</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/2014_08/just_let_it_go.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>葛明走了之后，我们去火葬场送他。</p>

<p>他在关好门窗的卧室里点燃了一盆木炭，静悄悄走掉了。</p>

<p>最先发现他的是跟他住一起的他母亲。她说，一圈木炭排在火盆里，大头向上，小头向下，整整齐齐。另外，他还专门喝了安眠药，所以没有一般烧炭者因为气促造成的痉挛表情。</p>

<p>这就是他的风格，做什么都计划详实，控制精准，旁人既无法预知，更无法阻挡。</p>

<p>“他不但表情很安详，而且碳氧血红蛋白让他全身都变成了樱桃红色，看起来就像个刚出生那天一样。”</p>

<p>“阿姨，你……”，我听到他妈妈这样说的时候有些不知道该怎么接话。</p>

<p>“别怕，我没疯”，她抹了一把眼泪，“只不过阿姨我退休之前是个法医。”</p>

<p>那天的确有很多眼泪，大家说的最多是，这太突然。</p>

<p>但我觉得不奇怪。的确，葛明是我们中间最幽默的人。不过，活到我这把年纪，已经明白那些让别人发笑的人，不过是把这技能当成保护自己内心世界的硬壳而已。和大多数动不动就要哭死在你面前的朋友相比，他们心门紧锁，难以真正亲近。</p>

<p>即便是像我们这样的关系，他也只说起过几次他的烦恼。</p>

<p>一次是他请我去他家吃饭，说想让我帮忙。</p>

<p>“我在找方便好用的热敷袋。要求很简单，一个人操作起来要很方便，什么部位用起来都很方便，什么时候想用热起来要很方便，还有，不要太丑”。</p>

<p>“最后一个要求表明，你是要送人吧？”</p>

<p>他只是笑，带我去看书房里面满屋子奇形怪状的物件。</p>

<p>“别人都说淘宝上什么都有得卖，但是我买回来试了好多，都没有特别满意的。”</p>

<p>我看了看，基本都还是进口货。</p>

<p>“如果说有热敷袋里的战斗机，那我好像就身处一个军事机场了，所以感觉帮不上什么忙了。”</p>

<p>“我已经大概决定哪几个比较好了，我是要你帮忙把我不要的带走几个。”</p>

<p>后来我听说，葛明给我们这帮人每人送了几个热敷袋。我们现在也不知道，他满意的那些究竟和我们手上的这些有什么不一样。</p>

<p>还有一次，是他叫我出去喝酒。喝到一半，他递给我他的手机，看一个什么“女神男神体重表”。</p>

<p>“你看，我是男神。”</p>

<p>“这谁给你发的？”</p>

<p>“是给我发的最后一条消息。”</p>

<p>“那你为什么不回呢？这不是一个很不错的开始聊天的话题吗？”</p>

<p>“因为是之前答应要发给我这个，但发之前，就说了以后不要再联系了。”</p>

<p>“那就不回了？我以为你的风格是永远最后挂电话，永远回最后一条的。”</p>

<p>“嗯，不回是因为会希望一直没有收到过这个。”</p>

<p>“为什么呢？”</p>

<p>“因为一旦收到，就会有’我答应你的事情已经办完了从此我们就没有关系了’的感觉冒出来，就好像我自己站在被封起来的纸箱里面，看到胶条把最后那点儿缝隙盖起来了一样。所以不知道怎么回，也宁愿一直没有收到。”</p>

<p>我最后一次见到他，是在商场碰巧遇见他在挑榨汁机。他拿着说明书，对导购小姐说：</p>

<p>“你看，上面写着：使用后立即清洁，就容易清洁。”</p>

<p>“是的，先生。”</p>

<p>“然后后面几页，它又写着：榨汁后应立即饮用。如果汁液在空气中暴露一段时间，就会变味并失去营养价值。”</p>

<p>“是的，先生。”</p>

<p>“那我每次榨完汁，究竟应该立即去清洗，还是应该立即去饮用果汁呢？”</p>

<p>他问完这个问题，我和导购小姐都笑了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Migration in Django 1.7 (2)]]></title>
    <link href="http://lenciel.cn/2014/08/django-1-dot-7-migrations-part-2/"/>
    <updated>2014-08-11T03:59:47+08:00</updated>
    <id>http://lenciel.cn/2014/08/django-1-dot-7-migrations-part-2</id>
    <content type="html"><![CDATA[<p>在应用开发的过程中，我们会遇到migration主要分为：</p>

<ol>
  <li>Schema Migrations：数据库schema的变化，也就是我们前面<a href="http://lenciel.cn/2014/08/django-1-dot-7-migrations/">讨论的内容</a></li>
  <li>Data Migrations：数据的变化，比如需要批量变更数据或者备份在其他地方的历史数据</li>
</ol>

<p>第二种是没法敲几条命令让Django自动帮你完成其他的事情的，而是需要手动使用<code>RunPython</code>，这里具体说一下做法。</p>

<p>还是以之前的那个项目来作为例子，我们首先创建一个migration file：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>python manage.py makemigrations --empty ts_data
</span><span class="line">
</span><span class="line">Migrations <span class="k">for </span>ts_data:
</span><span class="line">  0003_auto_20140811_0110.py:
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>它的内容如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span><span class="p">,</span> <span class="n">migrations</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Migration</span><span class="p">(</span><span class="n">migrations</span><span class="o">.</span><span class="n">Migration</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">    <span class="n">dependencies</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">        <span class="p">(</span><span class="s">&#39;ts_data&#39;</span><span class="p">,</span> <span class="s">&#39;0002_auto_20140805_1525&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="p">]</span>
</span><span class="line">
</span><span class="line">    <span class="n">operations</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">    <span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我们在里面加入一个<code>RunPython</code>的部分，来导入数据：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span><span class="p">,</span> <span class="n">migrations</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">ts_data.models</span> <span class="kn">import</span> <span class="n">PingPongPrice</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">def</span> <span class="nf">load_data</span><span class="p">(</span><span class="n">apps</span><span class="p">,</span> <span class="n">schema_editor</span><span class="p">):</span>
</span><span class="line">    <span class="n">PingPongPrice</span><span class="p">(</span><span class="n">date</span><span class="o">=</span><span class="n">date</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span><span class="mo">07</span><span class="p">,</span><span class="mi">29</span><span class="p">),</span>
</span><span class="line">         <span class="n">price</span><span class="o">=</span><span class="mf">12.00</span><span class="p">,</span>
</span><span class="line">         <span class="p">)</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class="line">    <span class="n">PingPongPrice</span><span class="p">(</span><span class="n">date</span><span class="o">=</span><span class="n">date</span><span class="p">(</span><span class="mi">2014</span><span class="p">,</span><span class="mo">01</span><span class="p">,</span><span class="mi">29</span><span class="p">),</span>
</span><span class="line">         <span class="n">price</span><span class="o">=</span><span class="mf">8.00</span><span class="p">,</span>
</span><span class="line">         <span class="p">)</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Migration</span><span class="p">(</span><span class="n">migrations</span><span class="o">.</span><span class="n">Migration</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">    <span class="n">dependencies</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">        <span class="p">(</span><span class="s">&#39;ts_data&#39;</span><span class="p">,</span> <span class="s">&#39;0002_auto_20140805_1525&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="p">]</span>
</span><span class="line">
</span><span class="line">    <span class="n">operations</span> <span class="o">=</span> <span class="p">[</span><span class="n">migrations</span><span class="o">.</span><span class="n">RunPython</span><span class="p">(</span><span class="n">load_data</span><span class="p">)]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果你觉得：咦，这样导入数据不是有点儿像用<code>syncdb</code>然后导入<code>fixture</code>么？的确，从效果上它们是一样的，个人觉得，对于测试环境我们可以继续使用fixture来保存mock的测试数据，然后使用<code>loaddata</code>命令手动加载测试数据。对生产环境使用migration来导入数据更好，和使用<code>loaddata</code>命令来导入fixture相比，它不需要手动操作，并且由于是通过<code>RunPython</code>来进行，实际上可以对数据进行各种需要的处理。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何不正确的殴打企鹅]]></title>
    <link href="http://lenciel.cn/2014/08/how-to-beat-the-penguin/"/>
    <updated>2014-08-09T20:32:58+08:00</updated>
    <id>http://lenciel.cn/2014/08/how-to-beat-the-penguin</id>
    <content type="html"><![CDATA[<p>今天在微信朋友圈里面看了20来条这游戏的成绩分享，还有的群开始讨论心得。打开链接一看，原来是当年那个小范围流行了一下的<a href="https://www.google.com/search?q=Penguin+Ball&amp;oq=Penguin+Ball&amp;aqs=chrome..69i57j69i60.972j0j4&amp;sourceid=chrome&amp;es_sm=91&amp;ie=UTF-8">Penguin Ball</a>嘛（我记得后来有些人开始玩那个<a href="http://www.bloody-penguin.com/">血腥版</a>，正常人就慢慢不玩这游戏了）。</p>

<p>不过，链接指向的那山寨游戏虽然没有再用flash，但是对手势事件的处理有问题（他们还是挺<a href="http://game.2sky.cn/js/52/index.js">大方的</a>），所以确实还蛮难的：我打了五六次，最好成绩6000多一点。</p>

<p>然后，那个页面除开嵌入了一个“教你如何调情”的广告之外，一直在不停的要你分享，分享，分享……</p>

<p>那我就分享嘛~~~</p>

<p>去看了一下微信的分享是怎么弄出去的，原来有个非官方的叫<code>WeixinJSBridge</code>的东西：只要是通过微信应用内置的Webview打开的网页就可以调用到一组特别的接口，比如分享链接到朋友圈或者发送链接给朋友。这两个接口的参数非常类似：</p>

<ul>
  <li>分享链接消息里面的title image的url </li>
  <li>title image的宽度和高度</li>
  <li>标题</li>
  <li>描述</li>
  <li>链接指向的url</li>
  <li>微信APPID</li>
</ul>

<p>分享出来的链接，以这个“打企鹅”的游戏为例，是长成下面这样子的一条链接消息：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_08/wechat_share_msg.jpg" alt="Wechat Message" title="Don't touch me..." /></p>

<p>所以，要伪装一个“打企鹅”的高分数链接就只需要找到title image的url和链接指向的url（因为标题和描述照着编就是了）。</p>

<p>本座觉得，那么山寨的游戏作者，肯定是把所有的东西都放在页面上的吧，于是用Chrome打开了那个页面，果然没有被拒绝（一般来说，给微信浏览的页面至少应该根据访问上报的user-agent等参数判断它是不是移动设备浏览的，如果不是应该reject），并且源码里面我想要的都在（所以比较敏感的js什么的minify一下会好一些）：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line">    <span class="kd">var</span> <span class="nx">mebtnopenurl</span> <span class="o">=</span> <span class="s1">&#39;http://game.2sky.cn/game/&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="kd">var</span> <span class="nx">rankurl</span> <span class="o">=</span> <span class="nx">mebtnopenurl</span><span class="p">;</span>
</span><span class="line">    <span class="nx">dataForWeixin</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">        <span class="s2">&quot;appId&quot;</span><span class="o">:</span> <span class="s2">&quot;wx60c8c12f639f3ef4&quot;</span><span class="p">,</span>
</span><span class="line">        <span class="s2">&quot;imgUrl&quot;</span><span class="o">:</span> <span class="s2">&quot;http://game.2sky.cn/vapp/52/3.jpg&quot;</span><span class="p">,</span>
</span><span class="line">        <span class="s2">&quot;url&quot;</span><span class="o">:</span> <span class="s2">&quot;http://bingkafei.hnsdcpa.com/game/52/&quot;</span><span class="p">,</span>
</span><span class="line">        <span class="s2">&quot;tTitle&quot;</span><span class="o">:</span> <span class="s2">&quot;打企鹅-6e游戏&quot;</span><span class="p">,</span>
</span><span class="line">        <span class="s2">&quot;tContent&quot;</span><span class="o">:</span> <span class="s2">&quot;打企鹅-6e游戏&quot;</span>
</span><span class="line">    <span class="p">};</span>
</span><span class="line">
</span><span class="line">    <span class="nx">dataForWeixin</span><span class="p">.</span><span class="nx">appId</span> <span class="o">=</span> <span class="s2">&quot;wx8820cdf5db680ffa&quot;</span><span class="p">;</span>
</span><span class="line">    <span class="nx">dataForWeixin</span><span class="p">.</span><span class="nx">url</span> <span class="o">=</span> <span class="s2">&quot;http://weiapp.552200.com/game/&quot;</span><span class="o">+</span><span class="nx">_con</span><span class="p">[</span><span class="s2">&quot;num&quot;</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">    <span class="kd">function</span> <span class="nx">dp_share</span><span class="p">(){</span>
</span><span class="line">        <span class="nb">document</span><span class="p">.</span><span class="nx">title</span> <span class="o">=</span><span class="s2">&quot;你简直霸气侧漏，把企鹅击飞出&quot;</span><span class="o">+</span><span class="nx">myData</span><span class="p">.</span><span class="nx">scoreName</span><span class="o">+</span><span class="s2">&quot;，谁还能超越我？&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;share&quot;</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class="line">        <span class="nx">dataForWeixin</span><span class="p">.</span><span class="nx">tTitle</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">title</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当然，拿到这些了之后，也不是马上一句：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">WeixinJSBridge</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="s1">&#39;shareTimeline&#39;</span><span class="p">,</span><span class="nx">data</span><span class="p">,</span><span class="nx">callback</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>就能把你装神弄鬼消息分享出去的。前面说了，微信那边还是会检查整个事情是不是发生在微信内置的webview里面。但是，要绕开也不是那么麻烦，你懂的…</p>

<p>总体感觉微信的这api还是挺扯的，本来可以作为身份校验的appid其实填不填也无所谓，所以朋友圈里面的链接点起来还是谨慎一点儿吧，骚年们。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Data Migration in Django 1.7 (1)]]></title>
    <link href="http://lenciel.cn/2014/08/django-1-dot-7-migrations/"/>
    <updated>2014-08-05T11:12:41+08:00</updated>
    <id>http://lenciel.cn/2014/08/django-1-dot-7-migrations</id>
    <content type="html"><![CDATA[<p>Django 1.7已经发布一段时间了，基本上这个版本最主要的改动就是加入了<code>migrations</code>。</p>

<p>在过去，几乎所有的Django项目都是用South来处理数据变更的。而在Django1.7版本，South的作者Andrew Godwin把<code>migrations</code>加到了Django Core里面。</p>

<p>So…</p>

<h1 id="migrations">Migrations是什么？</h1>

<p>Migrations其实就是一堆帮助你完成数据库变更和数据迁移的命令，使得你可以用“Django”的方式来管理和变更数据库的schema。比如，当你的model改变了，你需要在数据库里面去重命名一列时，你不会想跑到命令行下面去敲SQL吧？特别是，如果你要变更的数据库是线上的，有几百万用户数据，你应该更不愿意搭上这种活了吧？</p>

<p>Migrations让事情变得简单可控：</p>

<ol>
  <li>它使得数据库schema的调整可以通过Django命令来完成</li>
  <li>它使得数据库的schema和对应的model的变更被track起来：整个历史都可以版本化在Git里面</li>
  <li>提供了一套匹配schema和对应的fixture的机制</li>
  <li>如何和CI搭配起来，可以保证代码和数据一致性</li>
</ol>

<h1 id="migrations-1">Migrations上手</h1>

<h2 id="section">创建测试项目</h2>

<p>首先创建一个virtualenv和django项目：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>mkvirtualenv django17
</span><span class="line"><span class="nv">$ </span>pip install https://www.djangoproject.com/download/1.7c2/tarball/
</span><span class="line"><span class="nv">$ </span>django-admin.py startproject django_migration_test
</span><span class="line"><span class="nv">$ </span><span class="nb">cd </span>django_migration_test
</span><span class="line"><span class="nv">$ </span>python manage.py startapp ts_data
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后创建一个model到subl ts_data/models.py：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span>
</span><span class="line">
</span><span class="line"><span class="c"># Create your models here.</span>
</span><span class="line"><span class="k">class</span> <span class="nc">PingPongPrice</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
</span><span class="line">    <span class="n">date</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now_add</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class="line">    <span class="n">price</span> <span class="o">=</span> <span class="n">models</span><span class="o">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>subl django_migration_test/settings.py</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">INSTALLED_APPS</span> <span class="o">=</span> <span class="p">(</span>
</span><span class="line">    <span class="o">...</span>
</span><span class="line">    <span class="s">&#39;ts_data&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="migrations-2">创建Migrations</h2>

<p>使用下面的命令可以创建ts_data这个app的Migrations。当然，和大多数Django命令一样，如果你不显式的指定，就</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="p">(</span><span class="n">django17</span><span class="p">)</span> <span class="err">○</span> <span class="n">python</span> <span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">makemigrations</span> <span class="n">ts_data</span>
</span><span class="line"><span class="n">Migrations</span> <span class="k">for</span> <span class="s">&#39;ts_data&#39;</span><span class="p">:</span>
</span><span class="line">  <span class="mo">0001</span><span class="n">_initial</span><span class="o">.</span><span class="n">py</span><span class="p">:</span>
</span><span class="line">    <span class="o">-</span> <span class="n">Create</span> <span class="n">model</span> <span class="n">PingPongPrice</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="migrations-3">应用Migrations</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="o">(</span>django17<span class="o">)</span> ○ python manage.py migrate
</span><span class="line">Operations to perform:
</span><span class="line">  Apply all migrations: admin, contenttypes, ts_data, auth, sessions
</span><span class="line">Running migrations:
</span><span class="line">  Applying contenttypes.0001_initial... OK
</span><span class="line">  Applying auth.0001_initial... OK
</span><span class="line">  Applying admin.0001_initial... OK
</span><span class="line">  Applying sessions.0001_initial... OK
</span><span class="line">  Applying ts_data.0001_initial... OK
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>注意，因为是一个全新的app，这条命令会先建表，换句话说，之前版本的<code>syncdb</code>命令可以不用了。整个使用流程应该变成：</p>

<ol>
  <li>建立或者更新一个model</li>
  <li>运行<code>python manage.py makemigrations &lt;app_name&gt;</code></li>
  <li>运行<code>python mange.py migrate &lt;app_name</code>来应用创建的Migrations</li>
  <li>重复前面的步骤</li>
</ol>

<h1 id="section-1">不是新建的项目如何使用</h1>

<p>大多数情况下我们都是从旧版本的Django迁移过来，也就意味着是从South迁移过来。这种情况下需要：</p>

<ol>
  <li>删除所有的South创建的migration文件</li>
  <li>运行 <code>./manage.py makemigrations</code>，Django会根据你当前model来创建那份<code>initial migrations file</code></li>
  <li>运行<code>./manage.py migrate</code>，Django会把已经存在的数据库table当成是migration的产物，完成整个migration</li>
</ol>

<p>如果你运行上面的命令遇到错误，就需要运行 <code>./manage.py migrate --fake &lt;appname&gt;</code> 做一个fake的migration。</p>

<p>如果你不想丢掉过去的South维护的历史记录，可以同时使用South和Django Migrations：升级South到1.0，然后<a href="http://www.aeracode.org/2014/7/1/end-era/">参考这篇文章的做法</a>。</p>

<h1 id="southdjango-migrations">South和Django Migrations比较</h1>

<p>对比一下South和Django Migrations的workflow，可能会更加清晰：</p>

<h2 id="migrations-4">首次全新migrations</h2>

<p>South:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">./</span><span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">syncdb</span>
</span><span class="line"><span class="o">./</span><span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">schemamigration</span> <span class="o">&lt;</span><span class="n">appname</span><span class="o">&gt;</span> <span class="o">--</span><span class="n">initial</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Django Migrations:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">./</span><span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">makemigrations</span> <span class="o">&lt;</span><span class="n">appname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="migrations-5">应用migrations</h2>

<p>South:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">./</span><span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">migrate</span> <span class="o">&lt;</span><span class="n">appname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Django Migrations:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">./</span><span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">migrate</span> <span class="o">&lt;</span><span class="n">appname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="migrations-6">非首次migrations</h2>

<p>South:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">./</span><span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">schemamigration</span> <span class="o">&lt;</span><span class="n">appname</span><span class="o">&gt;</span> <span class="o">--</span><span class="n">auto</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Django Migrations:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="o">./</span><span class="n">manage</span><span class="o">.</span><span class="n">py</span> <span class="n">makemigration</span> <span class="o">&lt;</span><span class="n">appname</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到，大概是因为出自同一个作者的原因，Django Migrations基本上follow了South的工作流程，只不过是命令更加简洁和清晰了。</p>

<h1 id="section-2">更多细节</h1>

<h2 id="django-migrations">哪些变化会被Django Migrations找到？</h2>

<p>如果你再次运行<code>python manage.py migrate</code>，会发现什么都没有发生：这是因为在项目的数据库中有一张<code>django_migrations</code>仍然被更新。表，记录了哪些Migrations已经被应用过了：无论是运行了migrate还是fake的，这个表都会被插入一条记录。比如从South升级到使用Django自带的MigrationsDjango会检查是否有更新。如果没有，它就fake一次，但<code>django_migrations</code>仍然被更新。</p>

<p>在少数情况下，确实有需要再次运行某个特定的Migrations，我们可以在<code>django_migrations</code>里面把这个记录删除掉。</p>

<p>在极少数情况下，如果你有需要回退到特定的版本，比如最初的zero版本，可以用类似<code>python manage.py migrate &lt;app_name&gt; zero</code>的语法。</p>

<h2 id="migration-">Migration 文件</h2>

<p>在我们运行<code>python manage.py migrate &lt;app_name&gt;</code>究竟发生了什么？实际上，Django会创建一个python文件来描述如何完成这个migration，以前面的ts_data为例，这个文件位于<code>ts_data/migrations/0001_initial.py</code>，内容如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span><span class="p">,</span> <span class="n">migrations</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Migration</span><span class="p">(</span><span class="n">migrations</span><span class="o">.</span><span class="n">Migration</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">    <span class="n">dependencies</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">    <span class="p">]</span>
</span><span class="line">
</span><span class="line">    <span class="n">operations</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">        <span class="n">migrations</span><span class="o">.</span><span class="n">CreateModel</span><span class="p">(</span>
</span><span class="line">            <span class="n">name</span><span class="o">=</span><span class="s">&#39;PingPongPrice&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="n">fields</span><span class="o">=</span><span class="p">[</span>
</span><span class="line">                <span class="p">(</span><span class="s">&#39;id&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">AutoField</span><span class="p">(</span><span class="n">verbose_name</span><span class="o">=</span><span class="s">&#39;ID&#39;</span><span class="p">,</span> <span class="n">serialize</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">auto_created</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="bp">True</span><span class="p">)),</span>
</span><span class="line">                <span class="p">(</span><span class="s">&#39;date&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">DateTimeField</span><span class="p">(</span><span class="n">auto_now_add</span><span class="o">=</span><span class="bp">True</span><span class="p">)),</span>
</span><span class="line">                <span class="p">(</span><span class="s">&#39;price&#39;</span><span class="p">,</span> <span class="n">models</span><span class="o">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">)),</span>
</span><span class="line">            <span class="p">],</span>
</span><span class="line">            <span class="n">options</span><span class="o">=</span><span class="p">{</span>
</span><span class="line">            <span class="p">},</span>
</span><span class="line">            <span class="n">bases</span><span class="o">=</span><span class="p">(</span><span class="n">models</span><span class="o">.</span><span class="n">Model</span><span class="p">,),</span>
</span><span class="line">        <span class="p">),</span>
</span><span class="line">    <span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到，是完全可读的Python代码。这也是为什么推荐把整个<code>migrations</code>文件夹加入版本控制的原因：这样你的应用经过了怎样的变更就变得可以回溯了。</p>

<h2 id="migration-dependencies">Migration Dependencies</h2>

<p>上面的源代码有一些值得注意的地方。</p>

<p>首先，所有的migration file里面都有一个<code>Migration()</code>类，继承自<code>django.db.migrations.Migration</code>。在我们运行<code>migrate</code>命令的时候，运行的就是这个类。</p>

<p>这个类有两个list，一个是<code>dependencies</code>，一个是<code>operations</code>。</p>

<p><code>dependencies</code>定义了这个migration之前必须完成的操作，比如你的model里面包括一个外键，那么你得首先有对应的table。比如，假设外键指向的model在<code>app_1</code>，那么<code>dependencies</code>会像这样：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">dependencies</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">   <span class="p">(</span><span class="s">&#39;main&#39;</span><span class="p">,</span> <span class="s">&#39;__first__&#39;</span><span class="p">),</span>
</span><span class="line"><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果没有前置条件，这个list可以为空。但大多数时候<code>dependencies</code>是指向其他的migration文件。比如：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="n">dependencies</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">    <span class="p">(</span><span class="s">&#39;main&#39;</span><span class="p">,</span> <span class="s">&#39;0001_initial&#39;</span><span class="p">),</span>
</span><span class="line"><span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>这里使用list的结果是，所有的依赖是没有顺序的，也就是说你不需要按照0001、0002、0003的顺序来排列所有的依赖。</p>

<h2 id="migration-operations">Migration Operations</h2>

<p>这个list定义的就是migration完成的操作，可以分为下面的这些种类：</p>

<ul>
  <li>CreateModel</li>
  <li>DeleteModel</li>
  <li>RenameModel</li>
  <li>AlterModelTable</li>
  <li>AlterUniqueTogether</li>
  <li>AlteIndexTogether</li>
  <li>AddField</li>
  <li>RemoveField</li>
  <li>RenameField</li>
  <li>RunSQL</li>
  <li>RunPython</li>
</ul>

<p>前面的那些操作是整个Django Migrations的核心：因为需要对各种不同的数据库做适配。而后面的两个操作则是灵活度非常高的，几乎可以干任何事情。</p>

<h1 id="section-3">实例</h1>

<p>让我们试试把<code>PingPongPrice</code>的<code>price</code>这个field的<code>max_digits</code>改成8位的（通货膨胀嘛），然后再次运<code>makemigrations</code>行命令:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="o">(</span>django17<span class="o">)</span> ○ python manage.py makemigrations ts_data
</span><span class="line">Migrations <span class="k">for</span> <span class="s1">&#39;ts_data&#39;</span>:
</span><span class="line">  0002_auto_20140805_1525.py:
</span><span class="line">    - Alter field price on PingPongPrice
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到这次生成的migration文件里面有<code>AlterField</code>操作：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="c"># -*- coding: utf-8 -*-</span>
</span><span class="line"><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">unicode_literals</span>
</span><span class="line">
</span><span class="line"><span class="kn">from</span> <span class="nn">django.db</span> <span class="kn">import</span> <span class="n">models</span><span class="p">,</span> <span class="n">migrations</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">Migration</span><span class="p">(</span><span class="n">migrations</span><span class="o">.</span><span class="n">Migration</span><span class="p">):</span>
</span><span class="line">
</span><span class="line">    <span class="n">dependencies</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">        <span class="p">(</span><span class="s">&#39;ts_data&#39;</span><span class="p">,</span> <span class="s">&#39;0001_initial&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="p">]</span>
</span><span class="line">
</span><span class="line">    <span class="n">operations</span> <span class="o">=</span> <span class="p">[</span>
</span><span class="line">        <span class="n">migrations</span><span class="o">.</span><span class="n">AlterField</span><span class="p">(</span>
</span><span class="line">            <span class="n">model_name</span><span class="o">=</span><span class="s">&#39;PingPongPrice&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="n">name</span><span class="o">=</span><span class="s">&#39;price&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="n">field</span><span class="o">=</span><span class="n">models</span><span class="o">.</span><span class="n">DecimalField</span><span class="p">(</span><span class="n">max_digits</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">decimal_places</span><span class="o">=</span><span class="mi">2</span><span class="p">),</span>
</span><span class="line">        <span class="p">),</span>
</span><span class="line">    <span class="p">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's August now, boy...]]></title>
    <link href="http://lenciel.cn/2014/08/before-sunrise/"/>
    <updated>2014-08-04T23:47:03+08:00</updated>
    <id>http://lenciel.cn/2014/08/before-sunrise</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/2014_08/before_sunrise_1.jpg" alt="before sunrise1" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/2014_08/before_sunrise_2.jpg" alt="before sunrise2" title="Don't touch me..." /></p>

<blockquote><p>&#8220;I believe if there’s any kind of God it wouldn’t be in any of us, not you or me but just this little space in between. If there’s any kind of magic in this world it must be in the attempt of understanding someone, sharing something.&#8221;</p><footer><strong>Ethan Hawke</strong> <cite><a href="http://www.imdb.com/title/tt0112471/">Before Sunrise(1995)</a></cite></footer></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[白日焰火]]></title>
    <link href="http://lenciel.cn/2014/07/what-did-ocean-say-2/"/>
    <updated>2014-07-29T01:07:51+08:00</updated>
    <id>http://lenciel.cn/2014/07/what-did-ocean-say-2</id>
    <content type="html"><![CDATA[<p><img height="200" width="300" alt="spark" src="http://lenciel.cn/downloads/images/2014_07/Black_Coal_Thin_Ice.jpg" align="left" style="margin:0px 20px;" /> “你不要再来找我了。”文慧这么说的时候，柳徽不敢看她的眼睛。</p>

<p>当然，我们也可以说这是因为文慧身后的工地上高高的塔吊顶端那盏不可一世的探照灯：当时是凌晨一点，那工地又相隔甚远，本来应该是从天而降的灯光变得和视线平行。惨白的光线在茫茫夜色中显得异常刺眼，让人根本不敢看向她所在的方位。</p>

<p>他们常常在夜里聊天，这是有原因的。白天让人们变得循规蹈矩，不敢轻举妄动。放眼望去，每个人的额头上似乎贴上了符咒，世俗的规则在所有人身上发挥着魔法般的控制力，消磨掉生活本该有的神奇之处。无论扮演着紧张呆板，还是飞扬跋扈的角色，一切言谈举止一切思绪梦想，都仿佛在执行预设的程序而已。     </p>

<p>只有在夜里，他们才会感觉摆脱了现实的控制，让自己任性地随心游走。</p>

<p>“你说，那盏灯有没有200米远啊？”</p>

<p>“可能有吧，那又怎样？”</p>

<p>“如果，有一个地方离我们很远很远，比如十光年，二十光年。站在那个地方，往我们这里看，过去的十年、二十年就会一幕幕重现的，对吧？”</p>

<p>“啊？”</p>

<p>“就好比，你看，天上这些星星。很多说不定老早就已经挂掉了。只不过是因为和我们隔了几十万光年，我们就以为它还在一闪一闪亮晶晶呢。”</p>

<p>“我现在说的事情，跟这有什么关系？”</p>

<p>“你看，是活着还是已经死掉都可能只是站在哪里看的问题。”</p>

<p>“嗯，继续。”</p>

<p>“对一个时间旅行者来说，没有你们所谓生和死的区别，当然也没有在一起和分开的区别。不光是周围的人，我生活的地点也一直在变，在这里几年，到那里几年。但在这个城市里面，我知道有你，会觉得对它格外熟悉和依恋：那是因为在需要温暖的时候，我知道能躲到你的怀抱里面。据蔡先生说，这就是本地人和旅行者最大的区别。”</p>

<p>柳徽说这些的时候，认真地看着文慧。当然，还是看不清她是什么表情，就只好继续说下去：</p>

<p>“你说不要再见了，那我会听你的话。我只是想让你知道，人肯定是有能够吸引某个特定的人的线，即使没有太多话想聊，也能把对方拉过来。呆呆看着也好，默默守着也罢，就是想感受着有这个人的存在。”</p>

<p>然后，柳徽就慢慢变得透明起来。还没等文慧反应过来，就消失在无边的夜色之中。</p>

<p>这就是为什么女孩儿们从小就被教育千万不要搭理时间旅行者的原因：据说，他们的出现总是显得过于匆忙，好像白日焰火，很快就变得无影无踪。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中国式创新]]></title>
    <link href="http://lenciel.cn/2014/07/innovation-company/"/>
    <updated>2014-07-27T15:26:01+08:00</updated>
    <id>http://lenciel.cn/2014/07/innovation-company</id>
    <content type="html"><![CDATA[<p>今天看到一则新闻，百度要做<a href="http://www.36kr.com/p/214107.html">无人驾驶汽车</a>了。</p>

<p>这要换做几年前，本座可能还要看一下评论或者搜一下新闻来源，现在基本上看看这标题也大概能猜到是怎么个事情了。以技术创新为核心竞争力的互联网行业，在中国是“BAT”这样的三家公司领跑：</p>

<ul>
  <li>百度主要是<a href="http://food.hebei.com.cn/system/2013/03/13/012627507.shtml">卖假药</a>的</li>
  <li>腾讯主要是卖游戏的</li>
  <li>阿里主要是卖假货的</li>
</ul>

<p>虽然作为从业人员，一开始的时候本座会对这种状况感觉有些黯然。 但不得不承认，这几个大佬们就算做得不错的了：你总不会希望360、人人这样的公司来做老大吧？</p>

<p>不过，有一个公司，是无论如何本座都很难去忍受的，那就是最近发布了新一代手机的小米。I don’t wanna be an ass hole, so I’ll let you decide…</p>

<p>这是当年米3手机宣传册上的图标和苹果的Aperture应用的图标</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/xiaoxi_icon_mac_icon.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>这是小米盒子和Apple TV盒子</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/xiao_tv_mac_tv.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>这是小米零售店和苹果零售店 (除开装潢，小米居然一样有蓝衣genius)</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/xiaomi_mac_shop.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>这是小米的平板系列和苹果的5c系列</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/xiaomi_pad_mac_phone.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>这是小米的路由器和苹果的触摸板</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/xiaomi_router_mac_pad.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>这是最新款小米4手机和苹果5s手机</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/xiaomi_mac_new_phone.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>当然，发布会上有一张图让本座明白雷布斯内心有多么强大，所以抄抄产品外观算得了什么…</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/xiaomi_mac_presentation.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>你当然可以说，这是人家雷布斯的“苹果”情怀嘛。是啊是啊，不知道什么时候开始，“情怀”这个词居然变成了无能的解药。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac上使用Suite Fusion管理字体]]></title>
    <link href="http://lenciel.cn/2014/07/manage-fonts-on-your-mac/"/>
    <updated>2014-07-26T11:36:48+08:00</updated>
    <id>http://lenciel.cn/2014/07/manage-fonts-on-your-mac</id>
    <content type="html"><![CDATA[<p>对于从事设计工作的人员，难免要和字体打交道：因为<a href="http://lenciel.cn/2013/08/buttericks-practical-typography/">设计主要就是Typography的设计</a>，而Typography的基础就是字体。</p>

<p>随着完成的项目越来越多，机器上的字体也就慢慢多起来，如何快速的找到自己想要的字体变成了问题。特别是大多数设计软件里，字体选择的界面都是一个下拉框：如果你有几百个字体加载到系统，几乎每次选择字体都是一场灾难。</p>

<p>这种情况下，难免会希望：</p>

<ul>
  <li>对于特定的项目，能够选择特定的字体库</li>
  <li>对于特定的文档类型，能够选择特定的字体库</li>
</ul>

<p>使用Suite Fusion管理字体就可以到达这两个目的。</p>

<h2 id="mac">Mac上的字体集和安装路径</h2>

<p>过去在Windows平台上工作的时候，字体都是放在一个地方的，而在Mac下面字体主要是下面三部分字体集组成：</p>

<ul>
  <li>System：位于<code>/System/Library/Fonts</code>， 是系统的字体库，所有登录的用户都可以使用，最好不要随便改动</li>
  <li>Local：位于 <code>/Library/Fonts</code>，和System字体一样也是所有登录的用户都可以使用的。只是它们基本不是随系统安装，而是其他软件装上去的，比如MS Word等等</li>
  <li>User：位于 <code>~/Library/Fonts</code>，仅对当前登录的用户可用，可以是第三方软件安装的时候安装的（如果你选择了只对当前用户可用），也可以是用户自己安装的字体</li>
</ul>

<h2 id="suite-fusionfont-vault">启用Suite Fusion的Font Vault</h2>

<p>Suite Fusion提供了一个可以自己定义路径的Font Vault。然后你如果在<code>Preferences</code>里面把<code>Copy added fonts into the vault</code>勾上，那么所有添加到Suite Fusion的字体都会被放在一个地方。这样的好处是管理方便：保证字体没有重复，并且很容易备份。</p>

<p>一旦你的字体都在Font Vault里面了，就可以使用Suitcase Fusion删除原来放在各个地方的字体了。在字体清理好之后，你就可以根据不同的项目或者是文档类型建立Set，根据需要来激活它们。</p>

<h2 id="section">添加字体和创建字体库</h2>

<p>只需要使用快捷键”Cmd+L”就可以添加字体到字体库。如果默认的字体库不符合你的要求还可以自己新建。添加字体的过程中，SF会扫描字体，提取字体信息，检测是否有错（注意，Suite Fusion不支持orphan outline和orphan bitmap字体）。</p>

<p>并且，如果你本来是用目录来组织字体的，Suite Fusion在支持顶级目录导入，再自动以子目录名创建相应的字体库。</p>

<p>整理字体的界面可以参考下面的截图：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/suite_fusion_5.png" alt="suite fusion 5" title="Don't touch me..." /></p>

<p>建立的这些字体库可以根据你打开的文档类型来进行激活和去激活。并且Suite Fusion提供了很多常见设计软件（比如Photoshop、Sketch等）的插件，让你直接在这些软件里面操作字体库。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Retina屏幕上的最佳编程字体]]></title>
    <link href="http://lenciel.cn/2014/07/font-for-programming/"/>
    <updated>2014-07-13T18:45:27+08:00</updated>
    <id>http://lenciel.cn/2014/07/font-for-programming</id>
    <content type="html"><![CDATA[<p>关于编程使用什么样的字体比较好是一个由来已久的话题 <sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> <sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup> <sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>，但其实在不同分辨率和操作系统的屏幕上，字体的表现也不一样，所以并不应该有一统天下的字体。比如Retina的屏幕上，字体越细滑看起来似乎就好（当然这也是个体感觉），所以本座最近把所有的开发环境默认字体都换成了<a href="http://mplus-fonts.sourceforge.jp/">M+</a>。</p>

<p>除开字体给人的感觉很细腻之外，M+还满足了本座心中好字体的几大标准。</p>

<h2 id="section">窄</h2>

<p><img src="http://lenciel.cn/downloads/images/2014_07/fonts_comparision.png" alt="fonts comparision" title="Don't touch me..." /></p>

<p>可以看到，它比大多数的等宽字体都要窄。这样在本座13寸的笔记本屏幕上，也能在显示80个字符宽度的标线的同时，完整看到最少两个水平分割的编辑区。</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/pycharm_split.png" alt="pycharm split" title="Don't touch me..." /></p>

<p>当然，如果你对码农们为什么需要显示一根80个字符宽度的标线有疑问：这一方面是<a href="http://programmers.stackexchange.com/questions/148677/why-is-80-characters-the-standard-limit-for-code-width">处女座程序员对历史的坚持</a>，另一方面，如果你经常写出很长的语句，也意味着你的代码质量有问题。</p>

<h2 id="section-1">全</h2>

<p>除开基本的字符，M+因为是出自日本设计师的关系，字符很全。</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/fonts_map.png" alt="fonts map" title="Don't touch me..." /></p>

<h2 id="section-2">清</h2>

<p>对程序员来说，清楚的字体主要是指：</p>

<ul>
  <li>要能很方便的区别开大写的字母<code>O</code>和数字<code>0</code></li>
  <li>要能很方便的区别开数字<code>1</code>，大写的<code>I</code>和小写的<code>l</code></li>
  <li>要能很方便的区别开<code>.</code>和IDE显示的Whitespace</li>
</ul>

<p>M+在这方面也是非常棒的：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_07/fonts_clear.png" alt="fonts clear" title="Don't touch me..." /></p>

<p>因为是开源字体，M+是可以自由下载和使用的。但因为你在中国，可能访问不了Sourceforge，不如下载<a href="http://pan.baidu.com/s/1gdgk6VT">我分享的zip包</a>吧，lol。</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="http://hivelogic.com/articles/top-10-programming-fonts">top 10 programming fonts</a>.<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p><a href="http://hivelogic.com/articles/anonymous-pro-programming-monospace-font">Anonymous pro programming font</a>.<a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p><a href="http://www.slant.co/topics/67/~what-are-the-best-programming-fonts">What are the best programming fonts</a>.<a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac上自启动autossh]]></title>
    <link href="http://lenciel.cn/2014/07/fuck-the-gfw-with-ssh-tunnel/"/>
    <updated>2014-07-11T20:14:20+08:00</updated>
    <id>http://lenciel.cn/2014/07/fuck-the-gfw-with-ssh-tunnel</id>
    <content type="html"><![CDATA[<p>If you know what it is then you know what it is. Let’s fuck the GFW.</p>

<div><script src="https://gist.github.com/d353a04a3a7bc0278ec6.js?file=autossh.lenciel.plist"></script>
<noscript><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
&lt;dict&gt;
  &lt;key&gt;KeepAlive&lt;/key&gt;
  &lt;true/&gt;
  &lt;key&gt;Label&lt;/key&gt;
  &lt;string&gt;autossh.lenciel&lt;/string&gt;
  &lt;key&gt;ProgramArguments&lt;/key&gt;
  &lt;array&gt;
    &lt;string&gt;/opt/boxen/homebrew/bin/autossh&lt;/string&gt;
    &lt;string&gt;-M&lt;/string&gt;
    &lt;string&gt;20000&lt;/string&gt;
    &lt;string&gt;-f&lt;/string&gt;
    &lt;string&gt;-i&lt;/string&gt;
    &lt;string&gt;~/.ssh/fuckgfw&lt;/string&gt;
    &lt;string&gt;-N&lt;/string&gt;
    &lt;string&gt;-L&lt;/string&gt;
    &lt;string&gt;0.0.0.0:3189:localhost:31280&lt;/string&gt;
    &lt;string&gt;remotehost&lt;/string&gt;
  &lt;/array&gt;
  &lt;key&gt;RunAtLoad&lt;/key&gt;
  &lt;true/&gt;
  &lt;key&gt;WorkingDirectory&lt;/key&gt;
  &lt;string&gt;/opt/boxen/&lt;/string&gt;
  &lt;key&gt;StandardErrorPath&lt;/key&gt;
  &lt;string&gt;/opt/boxen/log/autossh/autossh.log&lt;/string&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz Composer和Origami试玩]]></title>
    <link href="http://lenciel.cn/2014/06/quartz-composer-and-origami/"/>
    <updated>2014-06-26T22:57:05+08:00</updated>
    <id>http://lenciel.cn/2014/06/quartz-composer-and-origami</id>
    <content type="html"><![CDATA[<p>这篇不是教程，不会讲述怎么安装需要的软件，怎么用它们来做软件原型。只是记录分享一下我对这套东西的感受和评价。</p>

<p>动态设计，也就是<a href="http://v.youku.com/v_show/id_XMzIyNTk1NTMy.html">Motion Design</a>或者是<a href="http://en.wikipedia.org/wiki/Motion_graphic_design">Motion Graphic Design</a>其实已经火了很长一段时间了：你只要经常去Dribble上逛就可以看到很多非常优秀的作品。国内的团队经过一段时间的学习和追赶，目前这方面的水平也很不错：从去年开始，BAT的大多数App的splash或者tutorial都已经不再是静态的图片而是动态图了。</p>

<p>当然，除开看起来更加狂炫帅富屌的splash、tutorial，本座看重动态设计的原因其实是它在原型阶段的作用：如果UX的团队会制作动态图，就能展示软件实际的操作流程，效果比传统的需要脑补的静态Wireframe要好太多。</p>

<p>不过从本座开始关注这种设计方法到现在，主流的动态设计流程一直是先在PS里面做静态资源，然后在AE里面导入静态资源做动画，最后生成mp4格式视频，然后配合QuickTime或者别的什么软件生成gif（比较详细的描述可以看看<a href="http://www.uisdc.com/the-internet-motion-graphic">这篇文章</a>)。</p>

<p>这种方式对本座来说上手就略显太重，换句话说，不是财大气粗的BAT，需要考虑：</p>

<ol>
  <li>PS+AE很贵</li>
  <li>会这两个东西的UX人才很贵</li>
</ol>

<p>接下来事情似乎有了转机：<a href="http://quartzcomposer.com/">Quartz Composer</a>和<a href="http://facebook.github.io/origami/">Origami</a>的组合自从Facebook的Paper推出之后在网络上被风风火火的讨论了一把，然后不久<a href="http://www.fastcodesign.com/3025932/facebook-develops-a-photoshop-for-interaction-design-and-its-free-for-anyone-to-use">Facebook就开源了后者</a>。</p>

<p>在有Origami之前，本座就看Facebook的设计主管说他们内部用QC做原型设计就去学习了一下，结果感觉实在是云里雾里。这次又了Origami之后，经过几个小时的试玩，我得到的感受如下。</p>

<p>首先，这套免费的工具非常给力：除开不要钱，不难用之外，给力主要是因为QC的patch设计带来的高度可重用性：其实Origami从根本上来说就是一堆patch而已。</p>

<p>其次，这套工具也称不上“photoshop for interaction design”。你仍然需要使用PS（或者Sketch等等做图的软件）做上游，把静态资源做好，然后导入到QC里面完成动态效果。这种”设计-切图-导入-动态化”的模式其实还蛮像一度风靡网络的flash的制作流程。</p>

<p>最后，如果你是程序员，习惯了写CSS/JS来控制界面，要适应QC的图形化编程（类似VB那样先选控件再改属性然后绑事件）还是蛮蛋疼的。比如它里面的设定偏移量来定位元素的方式，就让本座觉得用起来非常虐心。</p>
<p><img src="http://lenciel.cn/downloads/images/2014_06/qc_yx_intro.gif" title="intro" alt="Don't touch me" width="35%" style="margin-left:30px" /><img src="http://lenciel.cn/downloads/images/2014_06/qc_yx_bd.gif" title="bd" alt="Don't touch me" width="38%" style="margin-left:30px" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tricky Bugs are tricky]]></title>
    <link href="http://lenciel.cn/2014/06/tricky-bugs/"/>
    <updated>2014-06-23T13:05:33+08:00</updated>
    <id>http://lenciel.cn/2014/06/tricky-bugs</id>
    <content type="html"><![CDATA[<p>最近接连遇到非常tricky的bug。</p>

<p>首先是跟<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS">CORS</a>有关的。话说自从google被墙，我们使用了google map或者google font的网站就被客户不停投诉各种打不开。本座只好去找国内可用的CDN，居然发现<a href="http://libs.useso.com/">360的CDN</a>不但有常用的jquery库和fontawsome这些资源，还对google font做了镜像，于是就用了它。</p>

<p>结果用了CDN之后，<a href="fortawesome.github.io/">fontawsome</a>的图标在firefox下显示不正常。curl了一下，发现360的基友们没有正确添加”Access-Control-Allow-Origin”的Header：这就使得像Firefox这样的默认不支持CORS的浏览器拒绝加载不在网站自己域名下的CORS资源。</p>

<p>把fontawsome切换到<a href="http://www.staticfile.org/">staticfiles的CDN</a>，问题解决了。</p>

<p>接下来的一个更加tricky，我们的蔡天王在写代码的过程中发现表单被填了怪怪的内容，如下图：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_06/chrome_auto_fill.png" alt="chrome auto fill" title="Don't touch me..." /></p>

<p>他检查了js和html，发现这些值不是我们处理表单的时候填的，WTF？</p>

<p>专治各种疑难杂症的小弟拿到这个bug，首先怀疑的是浏览器那些自动填表的插件，比如<a href="https://lastpass.com/">LastPass</a>，结果用一个禁用了所有插件的Chrome重现了，WTF？</p>

<p>于是我尝试着把<code>form</code>和里面的<code>input</code>声明成<code>autocomplete="off"</code>的，结果仍然能重现，WTFFFF？</p>

<p>但是试过了几下变换表单里面的项的位置发现bug的行为模式是：</p>

<ol>
  <li>password这个input总是会被用户的密码填写</li>
  <li>password上面那个input总是会被用用户的用户名填写（哪怕那个input是别的）</li>
</ol>

<p>于是就感觉是Chrome的password mananger在干坏事了。google了一下，发现<a href="http://www.theregister.co.uk/2014/04/09/chrome_makes_new_password_grab_in_version_34/">这么个消息</a>：</p>

<blockquote><p>Chrome 34 will now offer to remember and fill password fields in the presence of autocomplete=off.” That means that if a website turns off automatic password collection, Chrome will offer to do it anyway if password manager is enabled.</p></blockquote>

<p>古德，瓦力瓦力古德。看了如果一个网站你选择了“记住密码”，Chrome的密码管理器就会被这个域名下包含了<code>$('input[name=password]')</code>的表单激活。并且它居然蠢到直接去找<code>password</code>上面一个input来填入用户名，how convenient…</p>

<p>要fix这种行为只能通过在出事的表单里面加上占位用的<code>input</code>来欺骗浏览器。比如我们是在django里面使用<code>django-crispy-form</code>生成表单，就可以重载它的Layout：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="bp">self</span><span class="o">.</span><span class="n">helper</span><span class="o">.</span><span class="n">layout</span> <span class="o">=</span>  <span class="n">Layout</span><span class="p">(</span>
</span><span class="line">    <span class="n">HTML</span><span class="p">(</span><span class="s">&#39;&lt;input style=&quot;display:none&quot; type=&quot;text&quot; name=&quot;fakeusernameremembered&quot;/&gt;&lt;input style=&quot;display:none&quot; type=&quot;password&quot; name=&quot;fakepasswordremembered&quot;/&gt;&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="s">&#39;name&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;email&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;phone&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;qq&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">InlineCheckboxes</span><span class="p">(</span><span class="s">&#39;user_permissions&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="s">&#39;password&#39;</span><span class="p">,</span> <span class="s">&#39;confirm_password&#39;</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>更多的相关信息（我希望你知道怎么翻墙），可以看看这里<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，或者这里<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，或者这里<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="https://groups.google.com/a/chromium.org/forum/#!msg/security-dev/wYGThW5WRrE/qiWrKwJ79S4J">PSA: Ignoring autocomplete=’off’ by default for password manager</a>.<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p><a href="https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/zhhj7hCip5c">Issue 352347 - chromium - Don’t autofill passwords where autocomplete=’off’</a>.<a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p><a href="https://blog.0xbadc0de.be/archives/124">The war against autocomplete=off: let my browser remember passwords</a>.<a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What did the ocean say to the other?]]></title>
    <link href="http://lenciel.cn/2014/06/what-did-ocean-say-1/"/>
    <updated>2014-06-12T01:45:06+08:00</updated>
    <id>http://lenciel.cn/2014/06/what-did-ocean-say-1</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/2014_06/wave.jpg" alt="ocean wave" title="Don't touch me..." /></p>

<p>最近读了张嘉佳的《从你的全世界路过》，其实就是他微博“睡前故事”的合集。</p>

<p>看头一两篇还行，多看几篇就发现这兄弟总是坚持不懈地出现在一段段很难自圆其说的古怪情感里面。出场的男女老少不是彪悍如风就是内向如铁，但都有一个特色就是不问过程不求结果。张兄在每个故事里面就像《红楼梦》里的癞头和尚，不是冷眼旁观抖着机灵暗透天机，就是喝着大酒爆着粗口当头棒喝。</p>

<p>这样的东西就好像《古惑仔》这样的电影，过程用力颓废，结尾使劲鸡汤，猛一看激荡人心，却终究是经不起回味。付出了真心的感情，既没必要过程一定要只在此山中那样晦涩沉重，更没必要结局一定要相逢一笑泯恩仇那样云淡风轻：要在恰当的时间碰到恰当的人并不容易。所谓“才下眉头，又上心头”，个中滋味只有当事人才真正明了，并没有规矩可循办法可依。</p>

<p>所以我决定也撸一把，睡前故事。决定了要讲故事，安排哪位先出场却让我颇费脑筋。幸亏这几天成都一直下雨，让我想起个人，他爸妈都姓李，所以他叫李叠。</p>

<p>李叠从小就不喜欢打伞，据说灵感来自于雨后地平线上会突然冒出的诸如竹笋、蘑菇之类的东西：这让他觉得淋雨有助于长个。这个理论按说也没错，但是没有考虑人不能倒立行走所以淋雨是不均匀灌溉的问题。于是淋雨让李叠脑袋变得比我们都大，于是这颗脑袋淋了更多的雨。循环往复，积重难返，头大的李叠走到哪里，“大头大头下雨不愁，人有雨伞我有大头”的歌谣就传唱到哪里。</p>

<p>某一天李叠的大头旁边多了一枚小头。姑娘话不多，每次默默地来，静静地走，但对李叠是真心好。有天李叠和我们去踢球摔了，也就擦破点儿皮。姑娘冲进宿舍给他上药，把他脏兮兮的大腿往自己腿上一横，蘸了酒精的棉签却怎么也下不去手。我们看她温柔地说了四遍，李叠你小心我要弄疼你了，终于开始操作：手到之处，李叠一颗大头上眉飞色舞锣鼓喧天，从此之后走上了踢球不要命逢踢必伤的悲壮道路。</p>

<p>可没多久两个人就要分开，原因他不说，我们就不问。最后一次晚饭，在他们常去的小餐馆，李叠让我们几个都去，免得场面不开心。餐馆灯光昏暗茶水粗劣，主菜京酱肉丝粗壮肥硕，既可食用亦可防身。加上厨子下手极重，感觉三两肉丝裹了三斤酱料，我们吃了一口就哭着表示不好意思今天没法提供开心的情绪了。于是姑娘缓缓起身，向我们挥手道别。</p>

<p>我看到李叠想伸手去握住些什么，手抬到一半，变成了挥手：“你多保重”。</p>

<p>姑娘咬了会儿嘴唇，对他说：“你也保重。”</p>

<p>没有眼泪，没有拥抱，当然也没有挽留。</p>

<p>不久李叠出国，跑到海的那头。收到他邮件落款成了是Wave Li。我问他为什么搞个这么奇怪的英文名，他问我:</p>

<p>“Do you know what does one ocean say to the other ocean?”</p>

<p>“不知道。”</p>

<p>“Nothing, they just wave.”</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Better Dictionary on Mac]]></title>
    <link href="http://lenciel.cn/2014/05/better-dictionary-on-mac/"/>
    <updated>2014-05-23T14:02:14+08:00</updated>
    <id>http://lenciel.cn/2014/05/better-dictionary-on-mac</id>
    <content type="html"><![CDATA[<p>Mac上很贴心的提供了词典，并且还绑定了快捷键：在任何页面按下”Ctrl+Cmd+D”，就会有词义解释的界面弹出。不过内置的<code>New Oxford American Dictionary</code>比较的弱，给人的感觉词条的水准就像《新华字典》一样单薄，所以换成了编了好几十年又修订了好几十年的<a href="http://zh.wikipedia.org/wiki/%E9%9F%A6%E6%B0%8F%E8%AF%8D%E5%85%B8">韦氏词典</a>，两者的差距还是明显的。</p>

<p>这是自带词典对pathos的解释：</p>

<blockquote><p>pathos /ˈpāˌTHäs/, a quality that evokes pity or sadness</p></blockquote>

<p>这是《韦氏词典》的：</p>

<blockquote><p>pathos /ˈpāˌTHäs/, n. </p><p>1. The quality or character of those emotions, traits, or experiences which are personal, and therefore restricted and evanescent; transitory and idiosyncratic dispositions or feelings as distinguished from those which are universal and deep-seated in character; — opposed to ethos.</p><p>2. That quality or property of anything which touches the feelings or excites emotions and passions, esp., that which awakens tender emotions, such as pity, sorrow, and the like; contagious warmth of feeling, action, or expression; pathetic quality; as, the pathos of a picture, of a poem, or of a cry.</p></blockquote>

<p>安装的方法也挺简单：</p>

<ul>
  <li>如果下载的是<a href="http://pan.baidu.com/s/1o6z67dK#dir/path=%2Fdictionary">这样</a>的<code>dictionary</code>文件，直接拷贝到<code>~/Library/Dictionaries</code></li>
  <li>如果是<a href="http://pan.baidu.com/s/1i35ik7N">这样</a>的raw文件，需要运行DictUnifier应用编译</li>
</ul>

<p>安装完毕运行<code>Dictionary</code>应用，勾选你期望出现的字典和顺序即可，我启用了《朗道英汉词典》、《韦氏词典》和《维基百科》:</p>

<p><img src="http://lenciel.cn/downloads/images/2014_05/apple_dict_effect.png" title="Apple Dict" alt="Don't touch me" width="60%" /></p>

<p>另外，词典的样式其实是用css定义的，就在每个字典文件的Contetns目录，比如：<code>~/Library/Dictionaries/dictd_www.dict.org_web1913.dictionary/Contents/DefaultStyle.css</code>。如果你不满意字典出来的样子，可以自定义格式。</p>

<p>最后，这些词典其实都是linux上著名的国产软件<a href="http://en.wikipedia.org/wiki/StarDict">stardict</a>的文件格式（写到这里，又想起stardict的作者<a href="http://www.huzheng.org/aboutme.php">胡正</a>），所以要在<a href="https://itunes.apple.com/us/app/dictionary-universal/id312088272?mt=8">手机上使用</a>也是很容易的事情。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This isn't happiness]]></title>
    <link href="http://lenciel.cn/2014/05/this-is-not-happiness/"/>
    <updated>2014-05-18T21:29:11+08:00</updated>
    <id>http://lenciel.cn/2014/05/this-is-not-happiness</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/iwdrm/false_start.gif" alt="this isn't happiness" title="Don't touch me..." /></p>

<blockquote><p>&#8220;Simplicity is comlexity resolved.&#8221;</p><footer><strong>Constantin Brancusi</strong> <cite><a href="http://en.wikipedia.org/wiki/Constantin_Br%C3%A2ncu%C8%99i">Yatzer(1911)</a></cite></footer></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress里插入带中文Gist的问题和解决]]></title>
    <link href="http://lenciel.cn/2014/05/fix-gist-style-in-octopress/"/>
    <updated>2014-05-17T13:00:38+08:00</updated>
    <id>http://lenciel.cn/2014/05/fix-gist-style-in-octopress</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/">Gist</a>是Github提供用来管理和分享<a href="https://gist.github.com/lenciel/4105165">代码片断</a>或者<a href="https://gist.github.com/lenciel/3462897">文档片断</a>的服务。和传统的<a href="http://en.wikipedia.org/wiki/Snippet_(programming)">snippet</a>管理系统相比，Gist因为实际上依托了Github的实现技术，所以具有存储在云端、自动的版本化、语法高亮支持的语言种类齐全、分享的便利性高等等优势。</p>

<p><a href="http://octopress.org">Octopress</a>里面引用你创建的gist的好处是显而易见的：你需要分享的<strong>内容</strong>在Gist那边被更好的管理了，而在日志里面用下面这样的语句就可以很容易的插入gist里面的内容:</p>

<div class="highlight"><pre><code class="text">{% gist gist_id [filename] %}
</code></pre></div>

<p>比如<a href="http://lenciel.cn/2014/05/web-development-skill-set-and-reading-list/">上篇文章</a>，理论上源代码就是这么一句：</p>

<div class="highlight"><pre><code class="text">{% gist lenciel/637812a7dcbe8341b07b web_skill_list.md %}
</code></pre></div>

<p>当然之所以说理论上，是因为首先Octopress的markdown插件对unicode的支持<a href="http://tokkonopapa.github.io/blog/2013/02/23/octopress-toc/">是有bug</a>的。所以直接插入带中文的gist在build的时候会看到<code>Liquid Exception</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">&gt;&gt;&gt; Compass is watching <span class="k">for </span>changes. Press Ctrl-C to Stop.
</span><span class="line">Liquid Exception: incompatible character encodings: UTF-8 and ASCII-8BIT in 2014-05-16-web-development-skill-set-and-reading-list.markdown
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>解决起来也很简单，只需要在<code>lib/jekyll/converters/markdown.rb</code>里面强制设定encoding就可以了：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>lib/jekyll/converters/markdown.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span class="gu">@@ -120,7 +120,7 @@ def convert(content)</span>
</span><span class="line">           rd = RDiscount.new(content, *@rdiscount_extensions)
</span><span class="line">           html = rd.to_html
</span><span class="line">           if rd.generate_toc and html.include?(@config[&#39;rdiscount&#39;][&#39;toc_token&#39;])
</span><span class="line"><span class="gd">-            html.gsub!(@config[&#39;rdiscount&#39;][&#39;toc_token&#39;], rd.toc_content)</span>
</span><span class="line"><span class="gi">+            html.gsub!(@config[&#39;rdiscount&#39;][&#39;toc_token&#39;], rd.toc_content.force_encoding(&#39;utf-8&#39;))</span>
</span><span class="line">           end
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接下来就是render出来的效果，样子丑到让人无法直视：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_05/gist_render_output_orig.jpg" alt="original gist render output" title="Don't touch me..." /></p>

<p>大概看了一下Octopress的文档，原来代码片断的样式（包括gist的渲染样式）都在<a href="https://github.com/imathis/octopress/blob/master/.themes/classic/sass/partials/_syntax.scss">_syntax.scss</a>里面。这个文件2012年就没有更新过了，但是github的gist输出在2013年有过变化，所以就有些不匹配了。</p>

<p>打开自己的模板，大概调了一下这个sass，主要是和其他的代码高亮一致：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_05/gist_render_output.jpg" alt="current gist render output" title="Don't touch me..." /></p>

<p>调整的地方见<a href="https://gist.github.com/lenciel/ecc8b3805ed346727abe">这里</a>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>_sass/partials/_syntax.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span class="gh">diff --git a/46501e4:sass/partials/_syntax.scss b/02b0441:sass/partials/_syntax.scss</span>
</span><span class="line"><span class="gh">index 137d475..5465286 100644</span>
</span><span class="line"><span class="gd">--- a/46501e4:sass/partials/_syntax.scss</span>
</span><span class="line"><span class="gi">+++ b/02b0441:sass/partials/_syntax.scss</span>
</span><span class="line"><span class="gu">@@ -22,10 +22,6 @@</span>
</span><span class="line">   @include border-radius(0);
</span><span class="line"> }
</span><span class="line">
</span><span class="line"><span class="gd">-.line-data {</span>
</span><span class="line"><span class="gd">-   font-size: 13px;</span>
</span><span class="line"><span class="gd">-}</span>
</span><span class="line"><span class="gd">-</span>
</span><span class="line"> figure.code, .gist-file, pre {
</span><span class="line">   @include box-shadow(rgba(#000, .06) 0 0 10px);
</span><span class="line">   .highlight pre { @include box-shadow(none); }
</span><span class="line"><span class="gu">@@ -43,10 +39,8 @@ html .gist .gist-file {</span>
</span><span class="line">     margin-bottom: 0;
</span><span class="line">   }
</span><span class="line">   .gist-syntax {
</span><span class="line"><span class="gd">-    background: #01222d !important;</span>
</span><span class="line"><span class="gd">-    color: #d5dee2 !important;</span>
</span><span class="line"><span class="gd">-    padding: 0 2em;</span>
</span><span class="line">     border-bottom: 0 !important;
</span><span class="line"><span class="gi">+    background: none !important;</span>
</span><span class="line">     .gist-highlight {
</span><span class="line">       background: $base03 !important;
</span><span class="line">     }
</span><span class="line"><span class="gu">@@ -57,17 +51,15 @@ html .gist .gist-file {</span>
</span><span class="line">   }
</span><span class="line">   .gist-meta {
</span><span class="line">    padding: .6em 0.8em;
</span><span class="line"><span class="gi">+   border: 1px solid lighten($base02, 2) !important;</span>
</span><span class="line"><span class="gi">+   color: $base01;</span>
</span><span class="line">    font-size: .7em !important;
</span><span class="line">    @if $solarized == light {
</span><span class="line"><span class="gd">-     color: $base01;</span>
</span><span class="line"><span class="gd">-     border: 1px solid lighten($base02, 2) !important;</span>
</span><span class="line">      background: lighten($base03, 2) $noise-bg;
</span><span class="line">      border: 1px solid $pre-border !important;
</span><span class="line">      border-top: 1px solid lighten($base03, 2) !important;
</span><span class="line">    } @else {
</span><span class="line"><span class="gd">-     background: #01222d $noise-bg;</span>
</span><span class="line"><span class="gd">-     text-shadow: none !important;</span>
</span><span class="line"><span class="gd">-     color: #d5dee2;</span>
</span><span class="line"><span class="gi">+     background: $base02 $noise-bg;</span>
</span><span class="line">    }
</span><span class="line">    @extend .sans;
</span><span class="line">    line-height: 1.5em;
</span><span class="line"><span class="gu">@@ -77,7 +69,7 @@ html .gist .gist-file {</span>
</span><span class="line">       &amp;:hover { color: $base1 !important; }
</span><span class="line">     }
</span><span class="line">     a[href*=&#39;#file&#39;] {
</span><span class="line"><span class="gd">-      position: absolute; top: 0; left:0; right:0px;</span>
</span><span class="line"><span class="gi">+      position: absolute; top: 0; left:0; right:-10px;</span>
</span><span class="line">       color: #474747 !important;
</span><span class="line">       @extend .code-title;
</span><span class="line">       &amp;:hover { color: $link-color !important; }
</span><span class="line"><span class="gu">@@ -221,7 +213,7 @@ pre, .highlight, .gist-highlight {</span>
</span><span class="line">   &amp;::-webkit-scrollbar-thumb:horizontal { background: $solar-scroll-thumb;  -webkit-border-radius: 4px; border-radius: 4px }
</span><span class="line"> }
</span><span class="line">
</span><span class="line"><span class="gd">-.highlight code {</span>
</span><span class="line"><span class="gi">+.highlight code { </span>
</span><span class="line">   @extend .pre-code; background: #000;
</span><span class="line"> }
</span><span class="line"> figure.code {
</span><span class="line"><span class="gu">@@ -267,11 +259,3 @@ figure.code {</span>
</span><span class="line">   text-shadow: #cbcccc 0 1px 0;
</span><span class="line">   padding-left: 3em;
</span><span class="line"> }
</span><span class="line"><span class="gd">-</span>
</span><span class="line"><span class="gd">-.gist-file {</span>
</span><span class="line"><span class="gd">-  font-size:.8em !important;</span>
</span><span class="line"><span class="gd">-}</span>
</span><span class="line"><span class="gd">-</span>
</span><span class="line"><span class="gd">-table.lines{</span>
</span><span class="line"><span class="gd">-  width: 100%;</span>
</span><span class="line"><span class="gd">-}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
</feed>
