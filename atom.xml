<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@Lenciel]]></title>
  <link href="http://lenciel.cn/atom.xml" rel="self"/>
  <link href="http://lenciel.cn/"/>
  <updated>2014-06-23T14:33:29+08:00</updated>
  <id>http://lenciel.cn/</id>
  <author>
    <name><![CDATA[Lenciel Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tricky Bugs are tricky]]></title>
    <link href="http://lenciel.cn/2014/06/tricky-bugs/"/>
    <updated>2014-06-23T13:05:33+08:00</updated>
    <id>http://lenciel.cn/2014/06/tricky-bugs</id>
    <content type="html"><![CDATA[<p>最近接连遇到非常tricky的bug。</p>

<p>首先是跟<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS">CORS</a>有关的。话说自从google被墙，我们使用了google map或者google font的网站就被客户不停投诉各种打不开。本座只好去找国内可用的CDN，居然发现<a href="http://libs.useso.com/">360的CDN</a>不但有常用的jquery库和fontawsome这些资源，还对google font做了镜像，于是就用了它。</p>

<p>结果用了CDN之后，<a href="fortawesome.github.io/">fontawsome</a>的图标在firefox下显示不正常。curl了一下，发现360的基友们没有正确添加”Access-Control-Allow-Origin”的Header：这就使得像Firefox这样的默认不支持CORS的浏览器拒绝加载不在网站自己域名下的CORS资源。</p>

<p>把fontawsome切换到<a href="http://www.staticfile.org/">staticfiles的CDN</a>，问题解决了。</p>

<p>接下来的一个更加tricky，我们的蔡天王在写代码的过程中发现表单被填了怪怪的内容，如下图：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_06/chrome_auto_fill.png" alt="chrome auto fill" title="Don't touch me..." /></p>

<p>他检查了js和html，发现这些值不是我们处理表单的时候填的，WTF？</p>

<p>专治各种疑难杂症的小弟拿到这个bug，首先怀疑的是浏览器那些自动填表的插件，比如<a href="https://lastpass.com/">LastPass</a>，结果用一个禁用了所有插件的Chrome重现了，WTF？</p>

<p>于是我尝试着把<code>form</code>和里面的<code>input</code>声明成<code>autocomplete="off"</code>的，结果仍然能重现，WTFFFF？</p>

<p>但是试过了几下变换表单里面的项的位置发现bug的行为模式是：</p>

<ol>
  <li>password这个input总是会被用户的密码填写</li>
  <li>password上面那个input总是会被用用户的用户名填写（哪怕那个input是别的）</li>
</ol>

<p>于是就感觉是Chrome的password mananger在干坏事了。google了一下，发现<a href="http://www.theregister.co.uk/2014/04/09/chrome_makes_new_password_grab_in_version_34/">这么个消息</a>：</p>

<blockquote><p>Chrome 34 will now offer to remember and fill password fields in the presence of autocomplete=off.” That means that if a website turns off automatic password collection, Chrome will offer to do it anyway if password manager is enabled.</p></blockquote>

<p>古德，瓦力瓦力古德。看了如果一个网站你选择了“记住密码”，Chrome的密码管理器就会被这个域名下包含了<code>$('input[name=password]')</code>的表单激活。并且它居然蠢到直接去找<code>password</code>上面一个input来填入用户名，how convenient…</p>

<p>要fix这种行为只能通过在出事的表单里面加上占位用的<code>input</code>来欺骗浏览器。比如我们是在django里面使用<code>django-crispy-form</code>生成表单，就可以重载它的Layout：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="bp">self</span><span class="o">.</span><span class="n">helper</span><span class="o">.</span><span class="n">layout</span> <span class="o">=</span>  <span class="n">Layout</span><span class="p">(</span>
</span><span class="line">    <span class="n">HTML</span><span class="p">(</span><span class="s">&#39;&lt;input style=&quot;display:none&quot; type=&quot;text&quot; name=&quot;fakeusernameremembered&quot;/&gt;&lt;input style=&quot;display:none&quot; type=&quot;password&quot; name=&quot;fakepasswordremembered&quot;/&gt;&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="s">&#39;name&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;email&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;phone&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="s">&#39;qq&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="n">InlineCheckboxes</span><span class="p">(</span><span class="s">&#39;user_permissions&#39;</span><span class="p">),</span>
</span><span class="line">    <span class="s">&#39;password&#39;</span><span class="p">,</span> <span class="s">&#39;confirm_password&#39;</span>
</span><span class="line"><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>更多的相关信息（我希望你知道怎么翻墙），可以看看这里<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，或者这里<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，或者这里<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="https://groups.google.com/a/chromium.org/forum/#!msg/security-dev/wYGThW5WRrE/qiWrKwJ79S4J">PSA: Ignoring autocomplete=’off’ by default for password manager</a>.<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p><a href="https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/zhhj7hCip5c">Issue 352347 - chromium - Don’t autofill passwords where autocomplete=’off’</a>.<a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p><a href="https://blog.0xbadc0de.be/archives/124">The war against autocomplete=off: let my browser remember passwords</a>.<a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从你的全世界错过]]></title>
    <link href="http://lenciel.cn/2014/06/what-ocean-said-1/"/>
    <updated>2014-06-12T01:45:06+08:00</updated>
    <id>http://lenciel.cn/2014/06/what-ocean-said-1</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/2014_06/wave.jpg" alt="ocean wave" title="Don't touch me..." /></p>

<p>最近读了张嘉佳的《从你的全世界路过》，其实就是他微博“睡前故事”的合集。</p>

<p>看头一两篇还行，多看几篇就发现这兄弟总是坚持不懈地出现在一段段很难自圆其说的古怪情感里面。出场的男女老少不是彪悍如风就是内向如铁，但都有一个特色就是不问过程不求结果。张兄在每个故事里面就像《红楼梦》里的癞头和尚，不是冷眼旁观抖着机灵暗透天机，就是喝着大酒爆着粗口当头棒喝。</p>

<p>这样的东西就好像《古惑仔》这样的电影，过程用力颓废，结尾使劲鸡汤，猛一看激荡人心，却终究是经不起回味。付出了真心的感情，既没必要过程一定要只在此山中那样晦涩沉重，更没必要结局一定要相逢一笑泯恩仇那样云淡风轻：要在恰当的时间碰到恰当的人并不容易。所谓“才下眉头，又上心头”，个中滋味只有当事人才真正明了，并没有规矩可循办法可依。</p>

<p>所以我决定也撸一把，睡前故事。决定了要讲故事，安排哪位先出场却让我颇费脑筋。幸亏这几天成都一直下雨，让我想起个人，他爸妈都姓李，所以他叫李叠。</p>

<p>李叠从小就不喜欢打伞，据说灵感来自于雨后地平线上会突然冒出的诸如竹笋、蘑菇之类的东西：这让他觉得淋雨有助于长个。这个理论按说也没错，但是没有考虑人不能倒立行走所以淋雨是不均匀灌溉的问题。于是淋雨让李叠脑袋变得比我们都大，于是这颗脑袋淋了更多的雨。循环往复，积重难返，头大的李叠走到哪里，“大头大头下雨不愁，人有雨伞我有大头”的歌谣就传唱到哪里。</p>

<p>某一天李叠的大头旁边多了一枚小头。姑娘话不多，每次默默地来，静静地走，但对李叠是真心好。有天李叠和我们去踢球摔了，也就擦破点儿皮。姑娘冲进宿舍给他上药，把他脏兮兮的大腿往自己腿上一横，蘸了酒精的棉签却怎么也下不去手。我们看她温柔地说了四遍，李叠你小心我要弄疼你了，终于开始操作：手到之处，李叠一颗大头上眉飞色舞锣鼓喧天，从此之后走上了踢球不要命逢踢必伤的悲壮道路。</p>

<p>可没多久两个人就要分开，原因他不说，我们就不问。最后一次晚饭，在他们常去的小餐馆，李叠让我们几个都去，免得场面不开心。餐馆灯光昏暗茶水粗劣，主菜京酱肉丝粗壮肥硕，既可食用亦可防身。加上厨子下手极重，感觉三两肉丝裹了三斤酱料，我们吃了一口就哭着表示不好意思今天没法提供开心的情绪了。于是姑娘缓缓起身，向我们挥手道别。</p>

<p>我看到李叠想伸手去握住些什么，手抬到一半，变成了挥手：“你多保重”。</p>

<p>姑娘咬了会儿嘴唇，对他说：“你也保重。”</p>

<p>没有眼泪，没有拥抱，当然也没有挽留。</p>

<p>不久李叠出国，跑到海的那头。收到他邮件落款成了是Wave Li。我问他为什么搞个这么奇怪的英文名，他问我:</p>

<p>“Do you know what does one ocean say to the other ocean?”</p>

<p>“不知道。”</p>

<p>“Nothing, they just wave.”</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Better Dictionary on Mac]]></title>
    <link href="http://lenciel.cn/2014/05/better-dictionary-on-mac/"/>
    <updated>2014-05-23T14:02:14+08:00</updated>
    <id>http://lenciel.cn/2014/05/better-dictionary-on-mac</id>
    <content type="html"><![CDATA[<p>Mac上很贴心的提供了词典，并且还绑定了快捷键：在任何页面按下”Ctrl+Cmd+D”，就会有词义解释的界面弹出。不过内置的<code>New Oxford American Dictionary</code>比较的弱，给人的感觉词条的水准就像《新华字典》一样单薄，所以换成了编了好几十年又修订了好几十年的<a href="http://zh.wikipedia.org/wiki/%E9%9F%A6%E6%B0%8F%E8%AF%8D%E5%85%B8">韦氏词典</a>，两者的差距还是明显的。</p>

<p>这是自带词典对pathos的解释：</p>

<blockquote><p>pathos /ˈpāˌTHäs/, a quality that evokes pity or sadness</p></blockquote>

<p>这是《韦氏词典》的：</p>

<blockquote><p>pathos /ˈpāˌTHäs/, n. </p><p>1. The quality or character of those emotions, traits, or experiences which are personal, and therefore restricted and evanescent; transitory and idiosyncratic dispositions or feelings as distinguished from those which are universal and deep-seated in character; — opposed to ethos.</p><p>2. That quality or property of anything which touches the feelings or excites emotions and passions, esp., that which awakens tender emotions, such as pity, sorrow, and the like; contagious warmth of feeling, action, or expression; pathetic quality; as, the pathos of a picture, of a poem, or of a cry.</p></blockquote>

<p>安装的方法也挺简单：</p>

<ul>
  <li>如果下载的是<a href="http://pan.baidu.com/s/1o6z67dK#dir/path=%2Fdictionary">这样</a>的<code>dictionary</code>文件，直接拷贝到<code>~/Library/Dictionaries</code></li>
  <li>如果是<a href="http://pan.baidu.com/s/1i35ik7N">这样</a>的raw文件，需要运行DictUnifier应用编译</li>
</ul>

<p>安装完毕运行<code>Dictionary</code>应用，勾选你期望出现的字典和顺序即可，我启用了《朗道英汉词典》、《韦氏词典》和《维基百科》:</p>

<p><img src="http://lenciel.cn/downloads/images/2014_05/apple_dict_effect.png" title="Apple Dict" alt="Don't touch me" width="60%" /></p>

<p>另外，词典的样式其实是用css定义的，就在每个字典文件的Contetns目录，比如：<code>~/Library/Dictionaries/dictd_www.dict.org_web1913.dictionary/Contents/DefaultStyle.css</code>。如果你不满意字典出来的样子，可以自定义格式。</p>

<p>最后，这些词典其实都是linux上著名的国产软件<a href="http://en.wikipedia.org/wiki/StarDict">stardict</a>的文件格式（写到这里，又想起stardict的作者<a href="http://www.huzheng.org/aboutme.php">胡正</a>），所以要在<a href="https://itunes.apple.com/us/app/dictionary-universal/id312088272?mt=8">手机上使用</a>也是很容易的事情。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[This isn't happiness]]></title>
    <link href="http://lenciel.cn/2014/05/this-is-not-happiness/"/>
    <updated>2014-05-18T21:29:11+08:00</updated>
    <id>http://lenciel.cn/2014/05/this-is-not-happiness</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/iwdrm/false_start.gif" alt="this isn't happiness" title="Don't touch me..." /></p>

<blockquote><p>&#8220;Simplicity is comlexity resolved.&#8221;</p><footer><strong>Constantin Brancusi</strong> <cite><a href="http://en.wikipedia.org/wiki/Constantin_Br%C3%A2ncu%C8%99i">Yatzer(1911)</a></cite></footer></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress里插入带中文Gist的问题和解决]]></title>
    <link href="http://lenciel.cn/2014/05/fix-gist-style-in-octopress/"/>
    <updated>2014-05-17T13:00:38+08:00</updated>
    <id>http://lenciel.cn/2014/05/fix-gist-style-in-octopress</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/">Gist</a>是Github提供用来管理和分享<a href="https://gist.github.com/lenciel/4105165">代码片断</a>或者<a href="https://gist.github.com/lenciel/3462897">文档片断</a>的服务。和传统的<a href="http://en.wikipedia.org/wiki/Snippet_(programming)">snippet</a>管理系统相比，Gist因为实际上依托了Github的实现技术，所以具有存储在云端、自动的版本化、语法高亮支持的语言种类齐全、分享的便利性高等等优势。</p>

<p><a href="http://octopress.org">Octopress</a>里面引用你创建的gist的好处是显而易见的：你需要分享的<strong>内容</strong>在Gist那边被更好的管理了，而在日志里面用下面这样的语句就可以很容易的插入gist里面的内容:</p>

<div class="highlight"><pre><code class="text">{% gist gist_id [filename] %}
</code></pre></div>

<p>比如<a href="http://lenciel.cn/2014/05/web-development-skill-set-and-reading-list/">上篇文章</a>，理论上源代码就是这么一句：</p>

<div class="highlight"><pre><code class="text">{% gist lenciel/637812a7dcbe8341b07b web_skill_list.md %}
</code></pre></div>

<p>当然之所以说理论上，是因为首先Octopress的markdown插件对unicode的支持<a href="http://tokkonopapa.github.io/blog/2013/02/23/octopress-toc/">是有bug</a>的。所以直接插入带中文的gist在build的时候会看到<code>Liquid Exception</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">&gt;&gt;&gt; Compass is watching <span class="k">for </span>changes. Press Ctrl-C to Stop.
</span><span class="line">Liquid Exception: incompatible character encodings: UTF-8 and ASCII-8BIT in 2014-05-16-web-development-skill-set-and-reading-list.markdown
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>解决起来也很简单，只需要在<code>lib/jekyll/converters/markdown.rb</code>里面强制设定encoding就可以了：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>lib/jekyll/converters/markdown.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span class="gu">@@ -120,7 +120,7 @@ def convert(content)</span>
</span><span class="line">           rd = RDiscount.new(content, *@rdiscount_extensions)
</span><span class="line">           html = rd.to_html
</span><span class="line">           if rd.generate_toc and html.include?(@config[&#39;rdiscount&#39;][&#39;toc_token&#39;])
</span><span class="line"><span class="gd">-            html.gsub!(@config[&#39;rdiscount&#39;][&#39;toc_token&#39;], rd.toc_content)</span>
</span><span class="line"><span class="gi">+            html.gsub!(@config[&#39;rdiscount&#39;][&#39;toc_token&#39;], rd.toc_content.force_encoding(&#39;utf-8&#39;))</span>
</span><span class="line">           end
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接下来就是render出来的效果，样子丑到让人无法直视：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_05/gist_render_output_orig.jpg" alt="original gist render output" title="Don't touch me..." /></p>

<p>大概看了一下Octopress的文档，原来代码片断的样式（包括gist的渲染样式）都在<a href="https://github.com/imathis/octopress/blob/master/.themes/classic/sass/partials/_syntax.scss">_syntax.scss</a>里面。这个文件2012年就没有更新过了，但是github的gist输出在2013年有过变化，所以就有些不匹配了。</p>

<p>打开自己的模板，大概调了一下这个sass，主要是和其他的代码高亮一致：</p>

<p><img src="http://lenciel.cn/downloads/images/2014_05/gist_render_output.jpg" alt="current gist render output" title="Don't touch me..." /></p>

<p>调整的地方见<a href="https://gist.github.com/lenciel/ecc8b3805ed346727abe">这里</a>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>_sass/partials/_syntax.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
</pre></td><td class="code"><pre><code class="diff"><span class="line"><span class="gh">diff --git a/46501e4:sass/partials/_syntax.scss b/02b0441:sass/partials/_syntax.scss</span>
</span><span class="line"><span class="gh">index 137d475..5465286 100644</span>
</span><span class="line"><span class="gd">--- a/46501e4:sass/partials/_syntax.scss</span>
</span><span class="line"><span class="gi">+++ b/02b0441:sass/partials/_syntax.scss</span>
</span><span class="line"><span class="gu">@@ -22,10 +22,6 @@</span>
</span><span class="line">   @include border-radius(0);
</span><span class="line"> }
</span><span class="line">
</span><span class="line"><span class="gd">-.line-data {</span>
</span><span class="line"><span class="gd">-   font-size: 13px;</span>
</span><span class="line"><span class="gd">-}</span>
</span><span class="line"><span class="gd">-</span>
</span><span class="line"> figure.code, .gist-file, pre {
</span><span class="line">   @include box-shadow(rgba(#000, .06) 0 0 10px);
</span><span class="line">   .highlight pre { @include box-shadow(none); }
</span><span class="line"><span class="gu">@@ -43,10 +39,8 @@ html .gist .gist-file {</span>
</span><span class="line">     margin-bottom: 0;
</span><span class="line">   }
</span><span class="line">   .gist-syntax {
</span><span class="line"><span class="gd">-    background: #01222d !important;</span>
</span><span class="line"><span class="gd">-    color: #d5dee2 !important;</span>
</span><span class="line"><span class="gd">-    padding: 0 2em;</span>
</span><span class="line">     border-bottom: 0 !important;
</span><span class="line"><span class="gi">+    background: none !important;</span>
</span><span class="line">     .gist-highlight {
</span><span class="line">       background: $base03 !important;
</span><span class="line">     }
</span><span class="line"><span class="gu">@@ -57,17 +51,15 @@ html .gist .gist-file {</span>
</span><span class="line">   }
</span><span class="line">   .gist-meta {
</span><span class="line">    padding: .6em 0.8em;
</span><span class="line"><span class="gi">+   border: 1px solid lighten($base02, 2) !important;</span>
</span><span class="line"><span class="gi">+   color: $base01;</span>
</span><span class="line">    font-size: .7em !important;
</span><span class="line">    @if $solarized == light {
</span><span class="line"><span class="gd">-     color: $base01;</span>
</span><span class="line"><span class="gd">-     border: 1px solid lighten($base02, 2) !important;</span>
</span><span class="line">      background: lighten($base03, 2) $noise-bg;
</span><span class="line">      border: 1px solid $pre-border !important;
</span><span class="line">      border-top: 1px solid lighten($base03, 2) !important;
</span><span class="line">    } @else {
</span><span class="line"><span class="gd">-     background: #01222d $noise-bg;</span>
</span><span class="line"><span class="gd">-     text-shadow: none !important;</span>
</span><span class="line"><span class="gd">-     color: #d5dee2;</span>
</span><span class="line"><span class="gi">+     background: $base02 $noise-bg;</span>
</span><span class="line">    }
</span><span class="line">    @extend .sans;
</span><span class="line">    line-height: 1.5em;
</span><span class="line"><span class="gu">@@ -77,7 +69,7 @@ html .gist .gist-file {</span>
</span><span class="line">       &amp;:hover { color: $base1 !important; }
</span><span class="line">     }
</span><span class="line">     a[href*=&#39;#file&#39;] {
</span><span class="line"><span class="gd">-      position: absolute; top: 0; left:0; right:0px;</span>
</span><span class="line"><span class="gi">+      position: absolute; top: 0; left:0; right:-10px;</span>
</span><span class="line">       color: #474747 !important;
</span><span class="line">       @extend .code-title;
</span><span class="line">       &amp;:hover { color: $link-color !important; }
</span><span class="line"><span class="gu">@@ -221,7 +213,7 @@ pre, .highlight, .gist-highlight {</span>
</span><span class="line">   &amp;::-webkit-scrollbar-thumb:horizontal { background: $solar-scroll-thumb;  -webkit-border-radius: 4px; border-radius: 4px }
</span><span class="line"> }
</span><span class="line">
</span><span class="line"><span class="gd">-.highlight code {</span>
</span><span class="line"><span class="gi">+.highlight code { </span>
</span><span class="line">   @extend .pre-code; background: #000;
</span><span class="line"> }
</span><span class="line"> figure.code {
</span><span class="line"><span class="gu">@@ -267,11 +259,3 @@ figure.code {</span>
</span><span class="line">   text-shadow: #cbcccc 0 1px 0;
</span><span class="line">   padding-left: 3em;
</span><span class="line"> }
</span><span class="line"><span class="gd">-</span>
</span><span class="line"><span class="gd">-.gist-file {</span>
</span><span class="line"><span class="gd">-  font-size:.8em !important;</span>
</span><span class="line"><span class="gd">-}</span>
</span><span class="line"><span class="gd">-</span>
</span><span class="line"><span class="gd">-table.lines{</span>
</span><span class="line"><span class="gd">-  width: 100%;</span>
</span><span class="line"><span class="gd">-}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web开发知识结构]]></title>
    <link href="http://lenciel.cn/2014/05/web-development-skill-set-and-reading-list/"/>
    <updated>2014-05-16T14:28:04+08:00</updated>
    <id>http://lenciel.cn/2014/05/web-development-skill-set-and-reading-list</id>
    <content type="html"><![CDATA[<p>这个list保存在了一个专门的<a href="https://gist.github.com/lenciel/637812a7dcbe8341b07b">Gist里面</a>，方便更新。</p>

<div><script src="https://gist.github.com/637812a7dcbe8341b07b.js?file=web_skill_list.md"></script>
<noscript><pre><code>## 基础知识
- 计算机软硬件基础
- 计算机网络
- 操作系统
- 数据结构和算法
- 设计模式
- 以及其他各种你应该懂的东西

## 前端开发
- 前端标准/规范
    - [HTTP1.1](http://www.w3.org/Protocols/rfc2616/rfc2616.html)
    - [ECMAScript3/5](http://www.ecma-international.org/publications/standards/Ecma-262.htm)
    - [W3C/DOM/BOM/XHTML/XML/JSON/JSONP](http://www.w3.org/TR/)
    - [CommonJS Modules](http://wiki.commonjs.org/wiki/Modules/1.0)/[AMD](https://github.com/amdjs/amdjs-api/wiki/AMD)
    - [HTML5](http://www.w3.org/html/wg/drafts/html/master/)/[CSS3](http://www.w3.org/Style/CSS/specs.en.html)
- 前端库/框架
    - [jQuery](http://jquery.com/)/[Underscore](http://underscorejs.org/)/[Mootools](http://mootools.net/)/[Prototype.js](http://www.prototypejs.org/)
    - [YUI3](http://yuilibrary.com/projects/yui3/)/[Dojo](http://dojotoolkit.org/)/[ExtJS](http://www.sencha.com/products/extjs)/[KISSY](http://docs.kissyui.com/)
    - [Backbone](http://backbonejs.org/)/[KnockoutJS](http://knockoutjs.com/)/[Emberjs](http://emberjs.com/)
    - [AngularJS](http://angularjs.org/)
        - [Batarang](https://chrome.google.com/webstore/detail/angularjs-batarang/ighdmehidhipcmcojjgiloacoafjmpfk)
    - [Bootstrap](http://getbootstrap.com/)
    - [Semantic UI](http://www.semantic-ui.com/)
    - [Juice UI](http://juiceui.com/)
    - [Web Atoms](http://webatomsjs.neurospeech.com/)
- 模板引擎(TBA)
- 静态站点生成器(TBA)
- 编程语言
    - [JavaScript](https://developer.mozilla.org/en-US/docs/JavaScript)/[Node.js](http://nodejs.org/)
    - [CoffeeScript](http://coffeescript.org/)
    - [TypeScript](http://www.typescriptlang.org/)        
    - [HTML](http://www.w3.org/html/)/[HTML5](http://www.w3.org/TR/html5/)
    - [CSS/CSS3](http://www.w3.org/Style/CSS/)
- 做图切图
    - [PhotoShop](http://www.photoshop.com/products/photoshop)/[Paint.net](http://www.getpaint.net/)/[Fireworks](http://www.adobe.com/cn/products/fireworks.html)/[GIMP](http://www.gimp.org/)
- 代码质量
    - Coding style
        - [JSLint](http://www.jslint.com/)/[JSHint](http://www.jshint.com/)/[jscs](https://github.com/mdevils/node-jscs)
        - [CSSLint](http://csslint.net/)
        - [Markup Validation Service](http://validator.w3.org/)
    - 单元测试
        - [QUnit](http://qunitjs.com/)/[Jasmine](http://pivotal.github.com/jasmine/)/[Jest](http://facebook.github.io/jest/index.html)
        - [Mocha](http://visionmedia.github.com/mocha/)/[Should](https://github.com/visionmedia/should.js/)/[Chai](http://chaijs.com/)/[Expect](https://github.com/LearnBoost/expect.js/)
        - [Unit JS](http://unitjs.com/)
    - 自动化测试
        - [Selenium WebDriver](http://docs.seleniumhq.org/docs/03_webdriver.jsp)/[Karma Runner](https://github.com/karma-runner/karma)/[Sahi](http://sahi.co.in/)
        - [phantomjs](http://phantomjs.org/)
- 性能
    - [JSPerf](http://jsperf.com/)
    - [YSlow 35 rules](http://developer.yahoo.com/performance/rules.html)
    - [PageSpeed](https://developers.google.com/speed/pagespeed/)
    - [HTTPWatch](http://www.httpwatch.com/)
    - [DynaTrace's Ajax](http://www.compuware.com/application-performance-management/dynatrace-ajax-download.html)
    - [高性能JavaScript](http://book.douban.com/subject/5362856/)
- 部署流程
    - 压缩合并
        - [YUI Compressor](http://developer.yahoo.com/yui/compressor/)
        - [Google Clousure Complier](https://developers.google.com/closure/compiler/)
        - [UglifyJS](https://github.com/mishoo/UglifyJS)
        - [CleanCSS](https://github.com/GoalSmashers/clean-css)
    - 文档输出
        - [JSDoc](http://code.google.com/p/jsdoc-toolkit/)
        - [Dox](https://github.com/visionmedia/dox)/[Doxmate](https://github.com/JacksonTian/doxmate)/[Grunt-Doxmate](https://github.com/luozhihua/grunt-doxmate)
    - 项目构建工具
        - [make](http://www.gnu.org/software/make/)/[Ant](http://ant.apache.org/)
        - [GYP](http://code.google.com/p/gyp/)
        - [Gulp](http://gulpjs.com)
        - [Grunt](http://gruntjs.com/)
        - [Yeoman](http://yeoman.io/)
        - [FIS](http://fis.baidu.com/)
        - [Mod](https://github.com/modulejs/modjs)
- 代码组织
    - 类库模块化
        - [CommonJS](http://www.commonjs.org/)/AMD
        - [YUI3模块](http://yuilibrary.com/projects/yui3/)
    - 业务逻辑模块化
        - [bower](https://github.com/twitter/bower)/[component](https://github.com/component/component)
    - 文件加载
        - [LABjs](http://labjs.com/)
        - [SeaJS](http://seajs.org/)/[Require.js](http://requirejs.org/)
    - 模块化预处理器
        - [Browserify](https://github.com/substack/node-browserify)
- 安全
    - [CSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)/[XSS](http://en.wikipedia.org/wiki/Cross-site_scripting)
    - ADsafe/Caja/Sandbox
- 移动Web
    - HTML5/CSS3
    - [响应式网页设计](http://zh.wikipedia.org/wiki/%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1)
    - [Zeptojs](http://zeptojs.com/)/[iScroll](http://cubiq.org/iscroll)
    - V5/[Sencha Touch](http://www.sencha.com/products/touch)
    - [PhoneGap](http://phonegap.com/)
    - [jQuery Mobile](http://jquerymobile.com/)
- 可视化
    - SVG/Canvas/VML
    - SVG: [D3](http://d3js.org/)/[Raphaël](http://raphaeljs.com/)/[Snap.svg](http://snapsvg.io/)/[DataV](http://datavlab.org/datavjs/)
    - Canvas: [CreateJS](http://www.createjs.com/)/[KineticJS](http://kineticjs.com/)

## 后端开发(TBA)
- 编程语言
- 网页服务器
    - [Nginx](http://nginx.org/en/)
    - [Apache](http://httpd.apache.org/)
    - [Lighttpd](http://www.lighttpd.net/)
- 数据库
    - SQL
    - [MySQL](http://www.mysql.com/)/[PostgreSQL](http://www.postgresql.org/)/[Oracle](http://www.oracle.com/us/products/database/overview/index.html)
    - [MongoDB](http://www.mongodb.org/)/[CouchDB](http://couchdb.apache.org/)

## 开发工具
- 浏览器
    - IE6/[7](http://www.microsoft.com/en-US/download/details.aspx?id=2)/[8](http://windows.microsoft.com/en-US/internet-explorer/downloads/ie-8)/[9](http://windows.microsoft.com/en-US/internet-explorer/downloads/ie-9/worldwide-languages)/[10](http://windows.microsoft.com/en-US/internet-explorer/ie-10-worldwide-languages)/[11](http://windows.microsoft.com/en-US/internet-explorer/ie-11-worldwide-languages) (Trident)
    - [Firefox](http://www.mozilla.org/en-US/) (Gecko)
    - [Chrome](http://www.google.com/chrome)/[Chromium](http://www.chromium.org/) (Blink)
    - [Safari](http://www.apple.com/safari/) (WebKit)
    - [Opera](http://www.opera.com/) (Blink)
- 编辑器和IDE
    - [VIM](http://www.vim.org/)/[Sublime Text2](http://www.sublimetext.com/)
    - [Notepad++](http://notepad-plus-plus.org/)/[EditPlus](http://www.editplus.com/)
    - [WebStorm](http://www.jetbrains.com/webstorm/)
    - [Emacs](http://www.gnu.org/software/emacs/)  [EmacsWiki](http://emacswiki.org)
    - [Brackets](http://brackets.io)
    - [Komodo IDE / Edit](http://www.activestate.com/komodo-edit)
    - [Eclipse](http://www.eclipse.org/)
    - [Visual Studio](http://www.visualstudio.com/)
    - [NetBeans](https://netbeans.org/)
    - [Cloud9 IDE](http://c9.io/)
- 调试工具
    - [Firebug](http://getfirebug.com/)/[Firecookie](https://addons.mozilla.org/en-US/firefox/addon/firecookie/)
    - [YSlow](http://developer.yahoo.com/yslow/)
    - [IEDeveloperToolbar](http://www.microsoft.com/en-us/download/details.aspx?id=18359)/[IETester](http://www.my-debugbar.com/wiki/IETester/HomePage)
    - [Fiddler](http://www.fiddler2.com/fiddler2/)
    - [Chrome Dev Tools](https://developers.google.com/chrome-developer-tools/)
    - [Dragonfly](http://www.opera.com/dragonfly/)
    - [DebugBar](http://www.debugbar.com/)
    - [Venkman](https://developer.mozilla.org/en-US/docs/Venkman)
- 版本管理
    - [Git](git-scm.com/)/[SVN](http://subversion.apache.org/)/[Mercurial](http://mercurial.selenic.com/)
    - [Github](https://github.com/)/[Bitbucket](https://bitbucket.org/)/[Google Code](http://code.google.com/hosting/)/[Gitorious](https://gitorious.org/)/[GNU Savannah](http://savannah.gnu.org/)/[Launchpad](https://launchpad.net/)/[SourceForge](http://sourceforge.net/)/[Gitlab](http://gitlab.org/)
    
## 部署运维(TBA)
- 代码编译与发布
- 服务器部署
- 服务器监控
- 服务器日志分析

## Softskill(TBA)
- 知识管理/总结分享
- 沟通技巧/团队协作
- 需求管理/PM
- 交互设计/可用性/可访问性知识

## 书籍推荐(TBA)
</code></pre></noscript></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Does iBeacons Work]]></title>
    <link href="http://lenciel.cn/2014/05/how-does-ibeacons-work/"/>
    <updated>2014-05-14T15:19:59+08:00</updated>
    <id>http://lenciel.cn/2014/05/how-does-ibeacons-work</id>
    <content type="html"><![CDATA[<p>iBeacons这个怪怪的单词<a href="https://www.google.com/search?q=%E6%9C%80%E8%BF%91%E5%87%BA%E9%95%9C%E7%8E%87%E5%BE%88%E9%AB%98+site%3A36kr.com&amp;oq=%E6%9C%80%E8%BF%91%E5%87%BA%E9%95%9C%E7%8E%87%E5%BE%88%E9%AB%98+site%3A36kr.com&amp;aqs=chrome..69i57.5408j0j7&amp;sourceid=chrome&amp;es_sm=91&amp;ie=UTF-8#newwindow=1&amp;q=ibeacons+site:36kr.com&amp;safe=off">最近出镜率很高</a>。它可以用的场景很多，考勤打卡，室内导航，各种关联位置的推送以及我们现在还想不到诡异的应用。但虽然满坑满谷的文章介绍如何应用iBeacons，但它工作的原理究竟是什么样的呢？</p>

<h1 id="bluetooth-le">Bluetooth LE</h1>

<p><a href="http://www.bluetooth.com/Pages/Low-Energy.aspx">Bluetooth Low Energy</a>，也就是低功耗蓝牙，经常被缩写成BLE。它其实是2010年颁布的Bluetooth 4.0标准的一部分：说准确点儿就是由Nokia提出的本来叫<code>Wibree</code>的那部分。</p>

<p>话说11年本座给一个银行做押运的系统，需要在Android手机上加外设，让押运员持卡验明正身。当时考察了好些技术，蓝牙，NFC，IC卡…蓝牙被放弃的原因就是供电太麻烦而4.0低功耗的设备市面上根本就找不到。因为虽然标准是2010年就颁布了，但是4.0的协议向下不兼容，设备更新没有那么快。一晃几年过去了，你还是能看到市面上有三种主要的蓝牙设备型号：</p>

<ul>
  <li>Bluetooth: 仅支持<code>传统</code>蓝牙</li>
  <li>Bluetooth Smart Ready: <code>传统</code>和<code>低功耗</code>通吃的蓝牙</li>
  <li>Bluetooth Smart: 仅支持<code>低功耗</code>蓝牙</li>
</ul>

<p><img src="http://lenciel.cn/downloads/images/2014_05/bluetooth_smart_ready_logo.jpg" alt="bluetooth smart ready logo" title="Don't touch me..." /></p>

<p>比较老的设备，以及大部分的汽车，家电等等，是仅支持传统意义上的Bluetooth的。</p>

<p>比较新的手机（iPhone 4S+，Samsung G3+），平板，笔记本等等都已经支持了完整的Bluetooth 4.0，所以都可以算是”Smart Ready”的。</p>

<p>Beacons，如前面所述，是仅支持低功耗这部分的标准，所以就是”Smart”的。这些设备一般一颗纽扣电池就可以保证它运行2年左右，发射频率和传统蓝牙一样都是2.4GHz-2.4835GHz，在无遮挡的情况下100米内都有信号，但传输速率比传统蓝牙慢：当然，低功耗蓝牙设计的目的也不是用来输送大量的数据。</p>

<h1 id="ble">BLE通信</h1>

<p>BLE通信主要是两种模式：<code>Advertising</code>和<code>Connecting</code>。</p>

<p><code>Advertising</code>是单向的。希望被发现的设备自主发射间隔从20ms到10s不等的数据包出来。发射间隔越短，电池寿命就会越短，但同时也会更快的被找到。数据包的组成为：</p>

<ul>
  <li>1 byte</li>
  <li>4 bytes access adress</li>
  <li>2-39 bytes advertising channel PDU</li>
  <li>3 bytes CRC</li>
</ul>

<p><img src="http://lenciel.cn/downloads/images/2014_05/bluetooth_le_packet.png" alt="bluetooth le packet" title="Don't touch me..." /></p>

<p>其中<code>access address</code>在这种模式下是固定的<code>0x8E89BED6</code>。换句话说，<code>Advertising</code>模式就是对外以一个固定的读取地址和固定的时间间隔不断的发送数据。</p>

<p>PDU的2个bytes的头包含了<code>size/type</code>等payload的信息，接着是device的MAC地址，最后是最多31个bytes的实际payload数据。</p>

<p>当一个设备被找到之后，连接可以切换到<code>Connecting</code>模式。这种情况下，设备可以对外提供可读写的服务（被称为GATT profile）。比如一个智能热水器，可以提供一个服务让你读取以及设置出水的温度。</p>

<p>关于<code>Connecting</code>到BLE设备，苹果的教程或者更专业的EE times的介绍都可以看看。但其实beacons没有使用<code>Connecting</code>模式，它只工作在<code>Advertising</code>模式下。</p>

<h1 id="beaconsble">beacons如何使用BLE</h1>

<p>beacons仅仅工作在<code>Advertising</code>模式下。因此，可以说所谓的<code>iBeacons</code>就是iOS下对BLE的<code>Advertising</code>工作模式里数据的定义和封装。</p>

<p>以Estimote的beacon为例，下面是它的PDU数据（使用XCode的<a href="http://stackoverflow.com/questions/5863088/bluetooth-sniffer-preferably-mac-osx">插件</a>可以对蓝牙设备抓包）：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">02 01 06 1A FF 4C 00 02 15 B9 40 7F 30 F5 F8 46 6E AF F9 25 55 6B 57 FE 6D 00 49 00 0A C5</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到整个payload数据是30bytes，非常符合协议最多31bytes的要求。实际上，这份数据的格式的确是苹果<a href="http://stackoverflow.com/questions/18906988/what-is-the-ibeacon-bluetooth-profile">精心设计</a>了的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">02 01 06 1A FF 4C 00 02 15: iBeacon prefix (fixed)
</span><span class="line">B9 40 7F 30 F5 F8 46 6E AF F9 25 55 6B 57 FE 6D: proximity UUID (here: Estimote’s fixed UUID)
</span><span class="line">00 49: major
</span><span class="line">00 0A: minor
</span><span class="line">C5: 2’s complement of measured TX power</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://lenciel.cn/downloads/images/2014_05/bluetooth_le_ibeacon_packet.png" alt="bluetooth le ibeacon packet" title="Don't touch me..." /></p>

<p>换句哈说，如果你想试玩一下iBeacons技术，在买到beacon之前，其实你手边的任何新一点儿的iPhone或者<a href="http://developer.radiusnetworks.com/2013/10/09/how-to-make-an-ibeacon-out-of-a-raspberry-pi.html">Mac设备都可以拿来作为iBeacon</a>的发射端或者接收端。当然，<a href="http://developer.radiusnetworks.com/2013/10/09/how-to-make-an-ibeacon-out-of-a-raspberry-pi.html">万能的树莓</a>也可以改造成beacon。</p>

<h1 id="ibeacon">iBeacon数据格式</h1>
<p><code>02 01 06 1A FF 4C 00 02 15</code>是固定不变的prefix。</p>

<p><code>Proximity UUID</code>用来标识beacon。比如商店里面一批beacon都是用来提供打折活动的推送给顾客，那么这批beacon的Proximity UUID就应该是一样的。</p>

<p><code>Major Number</code> (2 bytes，例子里面是<code>0×0049</code>，也就是73) 是用来对一批beacon进行分组的。比如商店里面的所有的beacon可以配置成相同的<code>Major Number</code>。</p>

<p><code>Minor Number</code> (2 bytes，例子里面是<code>0x000A</code>，也就是10)用来标识单个的beacon。因为商店里面每个beacon都有不同的<code>Minor Number</code>，才能知道顾客是处在什么位置。</p>

<h1 id="section">测距</h1>

<p>数据里面的最后一位，<code>TX Power</code>，就是用来表征你离某个beacon的距离的。它测距离主要就是用所谓的RSSI(Received Signal Strength Indication)去算，这个算法在iOS里面是已经集成了的，即便是需要在Android平台上面实现一遍<a href="http://stackoverflow.com/questions/20416218/understanding-ibeacon-distancing">也不是那么的复杂</a>。</p>

<p>另外需要注意的就是，无线信号总会因为障碍物以及其他的信号源更快的衰减。所以测算出来的距离只是一个有大概。</p>

<h1 id="ios">iOS集成</h1>

<p>苹果既然敢在beacon前面加个i当然是做了很多增强的。对应用开发者来说，最主要的就是当用户靠近iBeacons设备的时候，App即使不在前台也可以被唤醒，并发送notification给用户。</p>

<p>需要注意的是，因为beacon是周期性的发送，而手机在进入省电模式的时候探测蓝牙型号也是周期性的。这两个周期很可能会踩到边界，造成在实际应用中，有的手机<a href="http://developer.radiusnetworks.com/2013/11/13/ibeacon-monitoring-in-the-background-and-foreground.html">甚至会需要15分钟</a>左右的时间才能找到beacon。</p>

<p>iOS下详细的应用开发教程可以见<a href="http://www.cocoanetics.com/2013/11/can-you-smell-the-ibeacon/">这里</a>。更多的例子可以参考设备商Estimote的iOS SDK和Android。</p>

<h1 id="section-1">如何购买设备</h1>

<p>现在整个供货情况还是接不上趟的。我的<a href="http://estimote.com/">Estimote</a>已经订了4个多礼拜了还杳无音讯。因此最快的上手方案仍然是改造你的手机或者用Raspberry Pi自己搭个玩。但是如果你不满足（一般是满足不了的）这种玩法可以试试：</p>

<ul>
  <li>预订<a href="http://estimote.com/">Estimote</a>的beacon: 99刀3个</li>
  <li><a href="http://kontakt.io/">Kontakt</a>的beacon: 99刀4个，279刀10个</li>
  <li><a href="http://www.radiusnetworks.com/">RadiusNetworks</a>的树莓套件: 99刀1个</li>
  <li><a href="http://redbearlab.com/ibeacon/">RedBearLab</a>的Arduino套件： 30刀1个</li>
  <li><a href="http://bleu.io/">Bleu</a>的USB转iBeacon转接头：40刀1个，150刀5个</li>
</ul>

<p>另外，高通也有做自己的解决方案叫<a href="https://www.gimbal.com/">Gimbal</a>，不但提供了Android和iOS两套SDK，价格也很平易近人：5刀一个，值得拥有，:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Please Allow Me]]></title>
    <link href="http://lenciel.cn/2014/05/joy-myself/"/>
    <updated>2014-05-13T22:38:07+08:00</updated>
    <id>http://lenciel.cn/2014/05/joy-myself</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/iwdrm/tumblr_n5hh9kJw1i1shrw6zo1_400.gif" alt="Go and love more" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/iwdrm/tumblr_n5hh9kJw1i1shrw6zo2_400.gif" alt="Go and love more" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/iwdrm/tumblr_n5hh9kJw1i1shrw6zo3_400.gif" alt="Go and love more" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/iwdrm/tumblr_n5hh9kJw1i1shrw6zo4_400.gif" alt="Go and love more" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/iwdrm/tumblr_n5hh9kJw1i1shrw6zo5_400.gif" alt="Go and love more" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/iwdrm/tumblr_n5hh9kJw1i1shrw6zo6_400.gif" alt="Go and love more" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/iwdrm/tumblr_n5hh9kJw1i1shrw6zo7_400.gif" alt="Go and love more" title="Don't touch me..." />
<img src="http://lenciel.cn/downloads/images/iwdrm/tumblr_n5hh9kJw1i1shrw6zo8_400.gif" alt="Go and love more" title="Don't touch me..." /></p>

<blockquote><p>&#8220;We are only here briefly, and in this moment I want to allow myself joy.&#8221;</p><footer><strong>Pat Solitano</strong> <cite><a href="http://www.imdb.com/title/tt1798709/">Her(2013)</a></cite></footer></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何review产品的UX设计]]></title>
    <link href="http://lenciel.cn/2014/05/what-to-ask-about-design/"/>
    <updated>2014-05-12T22:45:33+08:00</updated>
    <id>http://lenciel.cn/2014/05/what-to-ask-about-design</id>
    <content type="html"><![CDATA[<p>产品设计中UX设计是很重要的一方面，毕竟是拿来见人的嘛。像我这样的工程师怎么去构思自己产品的UX设计或者是review别人的设计呢？当然还是工程师的思维方式了：</p>

<ul>
  <li>它外在的形式是什么？</li>
  <li>它内在的表达是什么？</li>
  <li>它的外在形式和内在表达一致吗？</li>
  <li>作为观者，我自己感觉如何？我能接收到它传达的东西吗？我能够被它激发起使用的兴趣吗？</li>
  <li>有了兴趣，接下来该怎么点击，怎么拖动，怎么操作是明显的吗？</li>
  <li>有没有过度的设计？有没有可以砍掉的地方？有没有做太多假设？有没有缺失的地方？</li>
  <li>今后如果功能上有这样那样的扩展，是很容易加上去的吗？</li>
</ul>

<p>我知道做设计的都很讨厌问题太多的人，没关系我会开始公示一下<a href="http://nd.lenciel.cn/">我心中的好设计</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You mean more to me]]></title>
    <link href="http://lenciel.cn/2014/05/you-mean-more-to-me/"/>
    <updated>2014-05-05T23:38:20+08:00</updated>
    <id>http://lenciel.cn/2014/05/you-mean-more-to-me</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/iwdrm/you_mean_more_to_me.gif" alt="You Mean More To Me" title="Don't touch me..." /></p>

<blockquote><p>&#8220;You mean more to me than any scientific truth.&#8221;</p><footer><strong>Donatas Banionis</strong> <cite><a href="http://www.imdb.com/title/tt0069293/">Солярис(1972)</a></cite></footer></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[晚安(三)]]></title>
    <link href="http://lenciel.cn/2014/05/good-night-3/"/>
    <updated>2014-05-05T03:38:34+08:00</updated>
    <id>http://lenciel.cn/2014/05/good-night-3</id>
    <content type="html"><![CDATA[<p><img alt="block" src="http://lenciel.cn/downloads/images/2014_03/good_night.jpg" align="left" style="margin:0px 5px;width:23%" />  </p>

<p>“喂，又在发什么呆啊，李重。”</p>

<p>项目经理张烈路过我座位的时候在我的显示器上狠狠地敲了一下，我好像睡梦中突然被惊醒的人一样猛地打了个寒颤，整个人立刻从延绵不绝的回忆中清醒过来。</p>

<p>大概是看到了我狼狈的模样，张烈也没用多说什么。他人其实不坏，但因为是名校毕业又年轻有为，所以有的时候难免会显得盛气凌人，不过我并不怪他：如果换了我拥有那样的顺遂的人生，面对像我这样碌碌无为的员工，大概也未必能比他和蔼可亲多少。</p>

<p>“我刚接了个电话，外公在兰州去世了，所以我得请几天假去奔丧。”</p>

<p>“几天？是兰州而已，又不是澳洲。”</p>

<p>“如果不介意的话我想坐火车去，所以路上的时间加上处理那些事情，大概要三四天。”</p>

<p>大概是习惯了我隔三差五的奇怪请求，张烈照旧耸耸肩，“你自己的假期要怎么用，我有什么好介意的，反正公司的Vacation Planner你自己填好申请就行了。”我看到他眼神里多少又流露出这个人35岁了还是初级程序员也是活该的意味，很想再解释两句，但还没有想好怎么开口，张烈已经转身走远了。</p>

<p>“哎，连请个假都请不好啊。”我心里叹了口气，在公司的OA里面填了请假申请，就关机出门了。公交换乘坐地铁，没多久就到了火车站。排了大概半个小时队之后，来回的车票都已经买好：虽然工作和生活的能力都不怎么样，但去兰州这么熟悉的事情，还是没有忘记。</p>

<p>“投入过感情的事情，怎么可能忘记呢？有时候不愿意去想罢了，那不过是一种自然而然创伤后自我保护的反应。”这时我就想起以前外公跟我说的话来，“但苦涩和甜蜜夹杂的回忆，这不正是人类相比其他动物拥有的特别之处么？那些什么都可以放下和忘记的人，我并不喜欢也看不起他们。”</p>

<p>是啊，怎么可能忘记呢，关于她的每件事情我都记得一清二楚。</p>

<p>我第一次见她并不是真人，而是照片。如果说这样就喜欢上她了未免显得有些胡说八道，但事实却的确如此。</p>

<p>照片上的她当然漂亮，但又绝不是一般的漂亮女生可比。她们大都下巴微收，面带微笑，眼睛本来就很大的还会瞪得更大，本来就穿得可爱的还会再嘟嘴做个OYeah之类的表情。总之，大概是因为希望自己的每张照片都让男人挪不开眼睛，所以难免会隐隐透出一股用力过猛的紧张感。</p>

<p>但她不同。</p>

<p>照片上的她衣着并不见得昂贵却十分得体，轻轻松松地就和背景里的山水融在了一起。留着齐脖子的短发，有着形状娇美的薄薄嘴唇，纤细而秀美的鼻翼，眼睛黑漆漆的但并不给人深不可测的感觉。当然，最让我难以忘怀的是她的笑容：那么放松而自然的笑容，是城市生活中绝少见到的清澈爽朗的人才能有的笑容。大概是因为常常在笑，下眼睑有了一条细细的纹路，彷佛可以看到太阳升起的海岸上一直延绵到远方的地平线，令人心醉。</p>

<p>那张照片从公司的公告板上拿下不久，我就在公司里面遇到了她。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[请输入密码]]></title>
    <link href="http://lenciel.cn/2014/05/better-password-form-field/"/>
    <updated>2014-05-04T09:33:43+08:00</updated>
    <id>http://lenciel.cn/2014/05/better-password-form-field</id>
    <content type="html"><![CDATA[<p>午饭之前的这点儿垃圾时间闲着也是闲着，大多数网站让用户输入密码都做得不够温柔。什么样是温柔呢？不打扰就是温柔…</p>

<link rel="stylesheet" href="http://lenciel.cn/downloads/static/css/flip_animations.css" />

<link rel="stylesheet" href="http://lenciel.cn/downloads/static/css/better_password_form_field.css" />

<div id="better-password-container">
    <div class="top"></div>
    <div class="middle">
      <div class="left"></div>
      <div class="middle">
        <div id="form-container">

          <div id="all-done">谢谢</div>

          <form id="verify-new-password">
            <label for="verify-password">请再次输入你的密码</label>
            <input placeholder="请再次输入你的密码" type="password" id="verify-password" name="password-to-verify" />
            <ul>
              <li id="matches-password">输入正确</li>
            </ul>

            <input type="submit" id="verify-password-submit" value="确认" disabled="disabled" />
            <button id="go-back">返回</button>
          </form>

          <form id="new-password">
            <label for="password">请输入密码</label>
            <input placeholder="请输入密码" type="password" id="password" name="password" />
            <ul>
              <li id="eight-plus">最少8位</li>
              <li id="uppercase">必须包含大写字母</li>
              <li id="lowercase">必须包含小写字母</li>
              <li id="numbers">必须包含数字</li>
              <li id="punctuation">必须包含符号</li>
            </ul>

            <input type="submit" id="password-submit" value="下一步" disabled="disabled" />
          </form>

        </div>
      </div>
      <div class="right"></div>
    </div>
    <div class="bottom"></div>
  </div>

<script src="http://lenciel.cn/downloads/static/js/better_password_form_field.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Edward Gorey]]></title>
    <link href="http://lenciel.cn/2014/04/edward-gorey/"/>
    <updated>2014-04-29T13:48:21+08:00</updated>
    <id>http://lenciel.cn/2014/04/edward-gorey</id>
    <content type="html"><![CDATA[<p>最近偶像派在说要买一些给蒙爷看的绘本。</p>

<p>这让我想起来《读库》有几期专门在梳理国内外那些有名的插画家。的确，纸质书最让人怀念的就是里面那些精致的插画。</p>

<p>我最喜欢的插画家是号称“黑旋风”的<a href="http://en.wikipedia.org/wiki/Edward_Gorey">Edward Gorey</a>。他本身是作家，但是最主要的成就却不是文字而是一系列绘本作品，比如代表作《<a href="http://www.douban.com/photos/album/34618766/?start=0">死小孩</a>》。他的画风非常特别，层层叠叠的钢笔在大片的留白中把细节逐一勾勒，塑造出神秘又阴森的质感。题材虽然常常黑暗甚至颓废，作品却总有意味深长的轻松诙谐流露出来，让你翻开的时候彷佛能看到一个倔强男人在对生活尽情调侃。</p>

<p>当然，这些要拿来做蒙爷的启蒙教育绘本当然是过分“黑暗”了一些。不过从技术上来说，试试怎么把图片叠得好看总是一样的。</p>

<p>所以，让我们看看Edward Gorey画的一些知名小说的封面吧（他能一直在作家圈子有帮朋友似乎也是因为画了不少封面）：
<link rel="stylesheet" type="text/css" href="http://lenciel.cn/downloads/static/css/elasticstack_slider.css" /></p>

<div class="slider-container">
    <ul id="elasticstack" class="elasticstack">
        <li><img src="http://lenciel.cn/downloads/images/2014_04/edward_gorey/gorey_kafka.jpg" alt="01" /><h5>Amerika</h5></li>
        <li><img src="http://lenciel.cn/downloads/images/2014_04/edward_gorey/gorey_james2.jpg" alt="02" /><h5>The Ambassadors</h5></li>
        <li><img src="http://lenciel.cn/downloads/images/2014_04/edward_gorey/gorey_james3.jpg" alt="03" /><h5>The Awkward Age</h5></li>
        <li><img src="http://lenciel.cn/downloads/images/2014_04/edward_gorey/gorey_james4.jpg" alt="04" /><h5>What Maisie Knows</h5></li>
        <li><img src="http://lenciel.cn/downloads/images/2014_04/edward_gorey/gorey_conrad1.jpg" alt="05" /><h5>Victory</h5></li>
        <li><img src="http://lenciel.cn/downloads/images/2014_04/edward_gorey/gorey_conrad2.jpg" alt="06" /><h5>Chance</h5></li>
        <li><img src="http://lenciel.cn/downloads/images/2014_04/edward_gorey/gorey_gogol1.jpg" alt="07" /><h5>喂&#8230;最后一张了</h5></li>
    </ul>
</div>
<!-- /container -->

<script src="http://lenciel.cn/downloads/static/js/draggabilly.pkgd.min.js"></script>

<script src="http://lenciel.cn/downloads/static/js/elastiStack.js"></script>

<script>
    new ElastiStack( document.getElementById( 'elasticstack' ) );
</script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Change The Light]]></title>
    <link href="http://lenciel.cn/2014/04/change-the-light/"/>
    <updated>2014-04-27T18:31:55+08:00</updated>
    <id>http://lenciel.cn/2014/04/change-the-light</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/iwdrm/change_the_light.gif" alt="Change the light" title="Don't touch me..." /></p>

<blockquote><p>&#8220;It’s just that it may change the light.&#8221;</p><footer><strong>Tracy Chevalier</strong> <cite><a href="http://www.imdb.com/title/tt0335119/">Girl With a Pearl Earring(2003)</a></cite></footer></blockquote>
<hr />
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用dnsmasq配置本地开发环境]]></title>
    <link href="http://lenciel.cn/2014/04/dnsmasq-on-mac/"/>
    <updated>2014-04-25T14:53:37+08:00</updated>
    <id>http://lenciel.cn/2014/04/dnsmasq-on-mac</id>
    <content type="html"><![CDATA[<p>做Web开发的时候经常需要修改<code>/etc/hosts</code>文件把<code>dev.cool.project</code>或者<code>cool.project.dev</code>这样的域名指向127.0.0.1(如果你从来没有这么做过那你可以跳过后面的内容了但, seriously? you are a web dev and never did this before?）。这样做有些麻烦：</p>

<ul>
  <li>每个项目需要修改hosts文件</li>
  <li>需要root权限才能修改这个文件</li>
</ul>

<p>这里记一下如何用<a href="http://www.thekelleys.org.uk/dnsmasq/doc.html">dnsmasq</a>把所有<code>dev</code>结尾的域名都指向<code>127.0.0.1</code>。</p>

<h4 id="dnsmasq">安装dnsmasq</h4>

<p>在Mac下安装什么东西本座都用<a href="http://brew.sh/">homebrew</a>，先更新brew:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>brew up
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>然后安装dnsmasq。注意安装命令的输出，结尾是有配置的简单说明的。因为我用了<a href="http://lenciel.cn/2013/03/boxen-introduction/">boxen</a>所以路径不一定对每个人都适用，以你自己的输出为准：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>brew install <span class="nv">dnsmasq</span>
</span><span class="line"><span class="o">==</span>&gt; make install <span class="nv">PREFIX</span><span class="o">=</span>/opt/boxen/homebrew/Cellar/dnsmasq/2.69
</span><span class="line"><span class="o">==</span>&gt; Caveats
</span><span class="line">To configure dnsmasq, copy the example configuration to /opt/boxen/homebrew/etc/dnsmasq.conf
</span><span class="line">and edit to taste.
</span><span class="line">  cp /opt/boxen/homebrew/opt/dnsmasq/dnsmasq.conf.example /opt/boxen/homebrew/etc/dnsmasq.conf
</span><span class="line">To have launchd start dnsmasq at startup:
</span><span class="line">sudo cp -fv /opt/boxen/homebrew/opt/dnsmasq/*.plist /Library/LaunchDaemons
</span><span class="line">Then to load dnsmasq now:
</span><span class="line">sudo launchctl load /Library/LaunchDaemons/homebrew.mxcl.dnsmasq.plist
</span><span class="line"><span class="o">==</span>&gt; Summary
</span><span class="line">/opt/boxen/homebrew/Cellar/dnsmasq/2.69: 7 files, 488K, built in 22 seconds
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="dnsmasq-1">配置dnsmasq</h4>

<p>在<code>dnsmasq.conf</code>里面添加一个配置<code>dev</code>的配置：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">address</span><span class="o">=</span>/dev/127.0.0.1
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>重启dnsmasq服务:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>sudo launchctl stop homebrew.mxcl.dnsmasq
</span><span class="line"><span class="nv">$ </span>sudo launchctl start homebrew.mxcl.dnsmasq
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="osx">配置OSX</h4>

<p>安装了dnsmasq之后你有两个选择：</p>

<ol>
  <li>把操作系统所有的DNS查询都由dnsmasq处理</li>
  <li>把<code>.dev</code>的DNS查询交给dnsmasq处理</li>
</ol>

<p>第一个比较简单，在<code>System Preferences</code>里面配置一下就可以了。
第二个需要用/etc/reslov.conf文件来更精细的控制DNS查询:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nv">$ </span>sudo mkdir -p /etc/resolver
</span><span class="line"><span class="nv">$ </span>sudo touch /etc/resolver/dev
</span><span class="line"><span class="nv">$ </span>sudo vi /etc/resolver/dev
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在<code>/etc/resolver/dev</code>里面添加一行<code>nameserver 127.0.0.1</code>就可以了。</p>

<h3 id="section">测试效果</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">    <span class="nv">$ </span>ping -c 1 www.sina.com.cn
</span><span class="line">    PING newscd.sina.com.cn <span class="o">(</span>221.236.31.145<span class="o">)</span>: 56 data bytes
</span><span class="line">
</span><span class="line">    <span class="nv">$ </span>ping -c 1 this.is.a.test.dev
</span><span class="line">    PING this.is.a.test.dev <span class="o">(</span>127.0.0.1<span class="o">)</span>: 56 data bytes
</span><span class="line">
</span><span class="line">    <span class="nv">$ </span>ping -c 1 this.is.cool.dev
</span><span class="line">    PING this.is.cool.dev <span class="o">(</span>127.0.0.1<span class="o">)</span>: 56 data bytes
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>嗯哼~</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[构建Deployment系统 (1)]]></title>
    <link href="http://lenciel.cn/2014/04/pipeline-for-deployment/"/>
    <updated>2014-04-22T02:49:38+08:00</updated>
    <id>http://lenciel.cn/2014/04/pipeline-for-deployment</id>
    <content type="html"><![CDATA[<p>对软件公司，特别是互联网软件公司来说，发布流程是企业的<a href="http://lenciel.cn/2013/05/the-importance-of-deploy-as-will/">核心竞争力</a>。</p>

<p>那么什么是一个好的发布流程呢？Github（别忘了它本身也是一家软件公司）的CTO在介绍<a href="http://lenciel.cn/2013/03/boxen-introduction/">Boxen
</a>的时候说过，他们公司新员工从拿电脑到可以开始编码只要30分钟，这给混过几家10w+员工公司的我带来的震撼特别强烈。</p>

<p>所以我觉得，一个好的软件发布流程应该是：</p>

<ol>
  <li>新员工在第一天入职就能push改动到production</li>
  <li>新员工在第一天入职就能学会怎么从production撤销一个错误的改动</li>
  <li>整个deployment流程是可预测的，也是可追溯的</li>
</ol>

<p>那么，如果你到了一个新公司，推开门发现那是一个蛮荒之地，应该怎么办呢？这篇先理一下基本的概念，然后后面分节描述一下讲到的这些工具具体要怎么配置怎么用。</p>

<h1 id="section">善其器</h1>

<p>先check一下东西齐不齐活:</p>

<ol>
  <li>代码repo是放在哪里： (<a href="http://git-scm.com/ (Git)">git</a>, <a href="http://mercurial.selenic.com/ (Mercurial)">hg</a>, …),</li>
  <li>hook到repo的一套有review功能的管理系统: (<a href="http://www.reviewboard.org">ReviewBoard</a>, <a href="https://www.gitlab.com/‎ (Gitlab)">Gitlab</a>, <a href="https://code.google.com/p/gerrit/ (Gerrit)">gerrit</a>, <a href="https://bitbucket.org/ (BitBucket)">bitbucket</a>, <a href="https://github.com/ (Github)">github</a>, …),</li>
  <li>hook到repo的一套CI管理系统:  (<a href="http://jenkins-ci.org/ (Jenkins)">Jenkins</a>, <a href="https://travis-ci.org/ (Travis CI)">Travis CI</a>, …),</li>
  <li>自动部署代码到服务器的系统 (<a href="https://puppetlabs.com/‎ (Puppet)">Puppet</a>, <a href="http://www.getchef.com/chef/ (Chef)">chef</a>, <a href="http://clusto.org/ (Clusto)">clusto</a>, …).</li>
</ol>

<p><img src="http://lenciel.cn/downloads/images/2014_04/deployment_phases.png" alt="Deployment Phases" title="Don't touch me..." /></p>

<p>你选择的工具当然对后面的流程有很大的影响。我们公司是采用<code>git</code>+<code>Gitlab</code>+<code>Reviewboard</code>+<code>Jenkins</code>+<code>fabric</code>来做部署。在搭建这套东西之前我也试过很多其他的东西，有的东西我放弃了是因为太复杂不够轻量(比如Puppet)，有的东西我放弃了是因为，长得太丑(比如Gerrit)。</p>

<h1 id="section-1">开发者视角</h1>

<p>假设你今天入职，写了段代码，从你的视角看到的deployment流程:</p>

<ol>
  <li>提交到本地repo。</li>
  <li>运行<a href="http://www.reviewboard.org/docs/rbtools/dev/">RBTools</a>生成一个Reviewboard的<code>review request</code></li>
  <li>代码通过了review拿到提交许可后，把代码merge然后push到Gitlab上的<code>alpha</code>分支</li>
  <li>Jenkins拿到change后做自动测试，然后部署到test服务器，发邮件通知QA</li>
  <li>QA或者是开发者自己玩一下test服务器，发现没有问题，手动运行Jenkins脚本。脚本会对代码打tag，并部署改动到staging服务器，发邮件通知QA和PO</li>
  <li>PO确认某个版本的所有代码都到了staging，QA做回归测试</li>
  <li>测试通过后，手动运行Jenkins脚本，脚本会部署某个staging服务器的版本到production服务器</li>
  <li>部署完毕后，Jenkins运行相应的冒烟测试，测试通过后邮件关键人士，表明production音容宛在</li>
</ol>

<p>整个流程里面，如果你是一个靠谱的开发者，需要花时间参与的步骤很少。但是如果是一个习惯不好的开发者，可能被review代码的人，Jenkins的自动测试，QA的集成测试或者是回归测试不断修理，惨痛的教训一定会让你成长起来的。</p>

<h1 id="section-2">机器视角</h1>

<p>很多重复性的事情，都是机器在干:</p>

<ol>
  <li>Reviewboard上被通过的代码被push上Gitlab的<code>alpha</code>分支后，Jenkins自动运行:
    <ol>
      <li>静态扫描工具</li>
      <li>单元测试</li>
      <li>有报错发邮件通知事主。没有报错， 部署<code>alpha</code>分支到test服务器</li>
      <li>部署test服务器后，运行集成测试集</li>
    </ol>
  </li>
  <li>有人手工触发staging的build:
    <ol>
      <li>merge<code>alpha</code>分支到<code>staging</code>分支</li>
      <li>部署<code>staging</code>分支到staging服务器</li>
      <li>部署服务器后，运行集成测试集</li>
    </ol>
  </li>
  <li>有人手工触发production的build:
    <ol>
      <li>merge<code>staging</code>分支到<code>production</code>分支</li>
      <li>部署<code>production</code>分支到production服务器</li>
      <li>after deployment, runs integration tests against production</li>
    </ol>
  </li>
</ol>

<p>这里很多具体的步骤需要通过Jenkins和它的插件甚至是自己写的各种脚本来配合完成</p>

<h1 id="section-3">考虑扩展性</h1>

<p>未知的未来，你可能会发现项目换了开发语言，项目换了JS框架，项目自动化测试改成手动了…在架构整套部署系统的时候，要做好和具体语言具体流程的解耦。</p>

<p>一些可能会有用的思路:</p>

<ol>
  <li>项目组足够小，成员能力足够好，可以不用review代码直接checkin到公共repo(成员能力足够好至少意味着，他有写靠谱的UT)</li>
  <li>你构建出来的系统，每个不同的build应该可以很容易的绑定不同的工具:
    1. 静态扫描工具是很好 (比如 <a href="http://www.pylint.org/ (PyLint)">pylint</a>, <a href="https://github.com/jcrocholl/pep8 (pep8.py)">pep8</a>或者<a href="http://www.jshint.com/ (JSHint)">jshint</a>)，但最好项目一开始就用它们。如果是旧项目不要往上套，费时费力
    2. 如果是用precommit的hook来跑测试，开发者本地可以不跑
    3. 如果是有特别要求的项目（安全性，健壮性等），可以很容易绑定其他的工具</li>
  <li>每个项目对应不同的deployment环境有不同的build配置</li>
  <li>三驾马车的服务器配置 (test, staging, production)什么时候应该祭出？个人经验是，如果研发团队超过3人了，再怎么省也得有两个(test+production)。如果有专职的QA团队，并且希望有稳定的版本部署出去，那三种环境的配置几乎是必须的。</li>
  <li>手动触发test到staging以及staging到production主要是为了手动测试的时间窗，让版本发布更可控。你也可以结合项目的具体情况决定要不要把这两步也自动化。</li>
</ol>

<p>如果是用了Jenkins，上面这些就非常方便了，因为说白了每个build不过就是当特定条件满足时执行的一堆特定脚本而已：当然，如果你发现公司还在用Ubuntu 12.04做build server，可能也没有那么方便。</p>

<h1 id="rants">Rants</h1>

<ol>
  <li><em>什么时候需要考虑上这种流程?</em> 如果是三个人的车库队伍，然后就队伍里面又没人有兴趣做对运维，那就算了吧。如果是正经开门做生意的公司，都该上。</li>
  <li><em>能不能允许”加急”?</em> 和很多大公司比，这套流程虽然已经精简了，但是总有时候我们有非常”紧急的”改动，能不能不走这套流程直接上？ 简单的回答就是，不能。如果你发现了有人要求加急，一定是目前的流程太慢。这种情况，一定是有什么东西坏掉了吧。比如之前的代码check不严格，很严重的错误很容易就到了production，或者你的员工们写的UT跑一年都跑不完或者是在build server上根本没法跑。</li>
  <li><em>为什么不自动部署?</em> 是，这里描述的流程只有到test服务器是自动部署的，后面到staging和production都是手动部署。因为据说，把自动merge和自动测试的代码部署到production服务器，是一个很容易让你半夜接到电话的举动，而且很多CEO鬓角的白头发都是因为这样的部署长出来的。当然如果你的manager已经在他老板那里夸口说你来了整个手动测试team都可以解散了，我就只能祝你好运了。</li>
  <li>静态扫描的工具（无论是lint还是style的检查），常常都会给团队带来比UT更好的提升：很多时候你在review的时候要不断告诉同事特别是新手同事你这段代码连style都不对，对两个人都是伤害…如果有个无情的机器用不妥协地负责做这件事情，嗯哼…</li>
</ol>

<p>Hope you have fun when setting up the pipeline for your company.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why look so sad]]></title>
    <link href="http://lenciel.cn/2014/04/why-look-so-sad/"/>
    <updated>2014-04-19T21:54:53+08:00</updated>
    <id>http://lenciel.cn/2014/04/why-look-so-sad</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/iwdrm/we_are_different.gif" alt="We are different" title="Don't touch me..." /></p>

<blockquote><p>&#8220;Why do you look so sad?&#8221;<br />&#8220;Because you speak to me in words and I look at you with feelings.&#8221;</p><footer><strong>Jean-Paul Belmondo</strong> <cite><a href="http://www.imdb.com/title/tt0059592/">Pierrot Le Fou (1965)</a></cite></footer></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[People Empty Out]]></title>
    <link href="http://lenciel.cn/2014/04/people-empty-out/"/>
    <updated>2014-04-19T17:36:49+08:00</updated>
    <id>http://lenciel.cn/2014/04/people-empty-out</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/2014_04/bukowski.jpg" alt="Bukowski" title="Don't touch me..." /></p>

<p>1969年，出版商<a href="http://en.wikipedia.org/wiki/John_Martin_(publisher)">John Martin</a>给了<a href="http://en.wikipedia.org/wiki/Charles_Bukowski">Charles Bukowski</a>一个月薪100刀的offer（当时的100刀大概是现在的500刀左右吧）： 只要他愿意从他当时上班的邮局辞职成为一名全职的作家。时年49岁的Bukowski接受了这份offer，并在1971年出版了他的首部小说<a href="http://en.wikipedia.org/wiki/Post_Office_(novel)">《Post Office》</a>。小说由Martin的<a href="http://en.wikipedia.org/wiki/Black_Sparrow_Press">Black Sparrow出版社</a>出版，名字算是用来表示跟自己过去的邮局里的职业生涯一刀两断。</p>

<p>15年之后，Bukowski在给Martin的信里面表达了他离开邮局的全职工作之后的体验：</p>

<p>(<em>Source: <a href="http://www.amazon.com/gp/product/1574230883/ref=as_li_ss_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1574230883&amp;linkCode=as2&amp;tag=letofnot-20">Reach for the Sun Vol. 3</a>; Image: Charles Bukowski, <a href="http://larosacanina.files.wordpress.com/2011/01/bukowski.jpg">via</a>.</em>)</p>

<blockquote><p>Hello John:</p><p>Thanks for the good letter. I don&#8217;t think it hurts, sometimes, to remember where you came from. You know the places where I came from. Even the people who try to write about that or make films about it, they don&#8217;t get it right. They call it &#8220;9 to 5.&#8221; It&#8217;s never 9 to 5, there&#8217;s no free lunch break at those places, in fact, at many of them in order to keep your job you don&#8217;t take lunch. Then there&#8217;s OVERTIME and the books never seem to get the overtime right and if you complain about that, there&#8217;s another sucker to take your place.</p><p>You know my old saying, &#8220;Slavery was never abolished, it was only extended to include all the colors.&#8221;</p><p>And what hurts is the steadily diminishing humanity of those fighting to hold jobs they don&#8217;t want but fear the alternative worse. People simply empty out. They are bodies with fearful and obedient minds. The color leaves the eye. The voice becomes ugly. And the body. The hair. The fingernails. The shoes. Everything does.</p><p>As a young man I could not believe that people could give their lives over to those conditions. As an old man, I still can&#8217;t believe it. What do they do it for? Sex? TV? An automobile on monthly payments? Or children? Children who are just going to do the same things that they did?</p><p>Early on, when I was quite young and going from job to job I was foolish enough to sometimes speak to my fellow workers: &#8220;Hey, the boss can come in here at any moment and lay all of us off, just like that, don&#8217;t you realize that?&#8221;</p><p>They would just look at me. I was posing something that they didn&#8217;t want to enter their minds.</p><p>Now in industry, there are vast layoffs (steel mills dead, technical changes in other factors of the work place). They are layed off by the hundreds of thousands and their faces are stunned:</p><p>&#8220;I put in 35 years&#8230;&#8221;</p><p>&#8220;It ain&#8217;t right&#8230;&#8221;</p><p>&#8220;I don&#8217;t know what to do&#8230;&#8221;</p><p>They never pay the slaves enough so they can get free, just enough so they can stay alive and come back to work. I could see all this. Why couldn&#8217;t they? I figured the park bench was just as good or being a barfly was just as good. Why not get there first before they put me there? Why wait?</p><p>I just wrote in disgust against it all, it was a relief to get the shit out of my system. And now that I&#8217;m here, a so-called professional writer, after giving the first 50 years away, I&#8217;ve found out that there are other disgusts beyond the system.</p><p>I remember once, working as a packer in this lighting fixture company, one of the packers suddenly said: &#8220;I&#8217;ll never be free!&#8221;</p><p>One of the bosses was walking by (his name was Morrie) and he let out this delicious cackle of a laugh, enjoying the fact that this fellow was trapped for life.</p><p>So, the luck I finally had in getting out of those places, no matter how long it took, has given me a kind of joy, the jolly joy of the miracle. I now write from an old mind and an old body, long beyond the time when most men would ever think of continuing such a thing, but since I started so late I owe it to myself to continue, and when the words begin to falter and I must be helped up stairways and I can no longer tell a bluebird from a paperclip, I still feel that something in me is going to remember (no matter how far I&#8217;m gone) how I&#8217;ve come through the murder and the mess and the moil, to at least a generous way to die.</p><p>To not to have entirely wasted one&#8217;s life seems to be a worthy accomplishment, if only for myself.</p><p>yr boy,</p><p>Hank</p></blockquote>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[马尔克斯的孤独与爱]]></title>
    <link href="http://lenciel.cn/2014/04/rip-marquez/"/>
    <updated>2014-04-18T20:58:42+08:00</updated>
    <id>http://lenciel.cn/2014/04/rip-marquez</id>
    <content type="html"><![CDATA[<p><img src="http://lenciel.cn/downloads/images/2014_04/rip_marquez.jpg" alt="Vhost threshold" title="Don't touch me..." /></p>

<p>度过了忙乱的一周，又回到了广汉。吃完饭洗个澡，继续在书房干活，外面的天不知不觉就黯淡下来。偶像派走过来说，《舌尖上的中国》第二季开播了，快来看吧。</p>

<p>但我总觉得有什么没有做，合上电脑之前，突然想起来，对，是马尔克斯没了。早上听到这个消息的时候，我好像想着要说点儿什么来着的。</p>

<p>我最喜欢的作家是马尔克斯，但我一般不会推荐别人去读他的小说。有人问我谁的小说比较好看时，我一般都推荐村上春树。</p>

<p>在我看来，什么是好的小说呢？像《白鹿原》、《平凡的世界》那些当然是非常好的小说，但这些小说你读起来更多是在领略，而不是在参与。换句话说，那些是适合十几岁的时候看的东西。</p>

<p>而活到一定年纪，你就会发现，人生就像在爬山，因为路太窄，加上不是在上坡，就是在下坡，很难在你想策马奔腾的时候就能找到一块平坦的地方，让你潇洒一番：大多数时候你不过是孤孤单单地走在爬山的路上而已。</p>

<p>问我的人大都和我差不多年纪，在城市里面生活，我想他们的体会应该和我类似。而在我眼中，村上春树把城市生活里的孤独感捕捉并表达到了无论是什么背景的读者都会有所共鸣的地步，所以我推荐他的小说。</p>

<p>但村上的小说，虽然我非常喜欢，为什么只能排在马尔克斯后面呢？大概和他有些<a href="http://www.xnuts.cn/marathon_cross-country-race/1886.html">刻板的写作生活有关</a>，村上的作品会让你感觉到从孤独到弃绝的意味。换句话说，你经常能被他营造的孤独感吞没，他却没有告诉你应该怎么办：他自己呢，倒是知道避开作家圈子，知道去听歌跑步健身，知道在鸡蛋和高墙之间如何选择。</p>

<p>而马尔克斯则大不相同。在很多时候，他被书商打上了孤独者的标签贩卖（在我们这个年代，孤独者的孤独也成了时髦，真是让孤独者无处可逃啊）。他下面这段话，也随着《百年孤独》在国内广为传颂：</p>

<blockquote><p>过去都是假的，回忆是一条没有归途的路，以往的一切春天都无法复原，即使最狂乱且坚韧的爱情，归根结底也不过是一种瞬息即逝的现实，唯有孤独永恒。</p></blockquote>

<p>但看过《百年孤独》的人都知道，那其实是个非常热闹的故事。换句话说，虽然是写出了前面这段带着些孤独宿命论的话，马尔克斯并不是仅仅靠营造孤独感来引起你共鸣：他在劝你好好去爱。</p>

<p>孤独的确是人的宿命：我们每个人都是这世界上一个偶然的存在，生命如此漫长又短暂，我们一直在得到和失去，汲取和忘却，不要说别人，我们自己也不一定来得及了解自己。</p>

<p>很多人以为对抗孤独，需要绝对的爱，比如男女之间那种想要燃尽各自的肉体和精神的完全排他性的爱，或者父母孩子之间那种完全忘我不计付出的爱。</p>

<p>但无论村上还是马尔克斯讲诉的故事，都告诉你即便是这些绝对的爱，也难以与岁月相抗衡。人们对此心知肚明，可是往往还是憧憬着绝对的爱，对自己所拥有的“有瑕疵的爱”感到不满足。</p>

<p>于是马尔克斯更进一步，他告诉你那份孤独恰恰是爱的最意味深长的赠品。你接受了这份赠品，就能学会理解别的孤独的灵魂和深藏于它们之中的深邃的爱。读懂他你会明白，是否一起生活一起死去并不重要，能够在他/她到来的时候好好去爱，其充实感是任何体验都无法比拟的。从某种意义上说，那么强烈的感情正是人的一生中最美好的东西。</p>

<p>所以，并没有像电池一样的东西在持续供给着让你对抗孤独。那些某个瞬间点燃的火花，就足够照亮我们漫长的日常生活。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Openssl Heartbleed Bug]]></title>
    <link href="http://lenciel.cn/2014/04/openssl-heartbleed-bug/"/>
    <updated>2014-04-10T11:29:15+08:00</updated>
    <id>http://lenciel.cn/2014/04/openssl-heartbleed-bug</id>
    <content type="html"><![CDATA[<p>连某宝都中招的<a href="http://heartbleed.com/">Heartbleed bug</a>究竟是个什么东西？简单地说就是攻击者可以读最多64KB内存的内容。</p>

<p>读了这64KB能干嘛？用报这个bug的人的话来说：</p>

<blockquote><p>Without using any privileged information or credentials we were able steal from ourselves the secret keys used for our X.509 certificates, user names and passwords, instant messages, emails and business critical documents and communication.</p></blockquote>

<p>那么读取64KB内存和获取这么多关键信息究竟有什么关系呢？</p>

<h2 id="the-bug">The bug</h2>
<p>先来看看<a href="http://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=96db9023b881d7cd9f379b0c154650d6c108e9a3">patch</a>里面的<code>ssl/d1_both.c</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="kt">int</span>
</span><span class="line"><span class="nf">dtls1_process_heartbeat</span><span class="p">(</span><span class="n">SSL</span> <span class="o">*</span><span class="n">s</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">    <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">s</span><span class="o">-&gt;</span><span class="n">s3</span><span class="o">-&gt;</span><span class="n">rrec</span><span class="p">.</span><span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="o">*</span><span class="n">pl</span><span class="p">;</span>
</span><span class="line">    <span class="kt">unsigned</span> <span class="kt">short</span> <span class="n">hbtype</span><span class="p">;</span>
</span><span class="line">    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">payload</span><span class="p">;</span>
</span><span class="line">    <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">padding</span> <span class="o">=</span> <span class="mi">16</span><span class="p">;</span> <span class="cm">/* Use minimum padding */</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到，heartbeat里有一个 <a href="http://en.wikipedia.org/wiki/Transport_Layer_Security">SSLv3</a>  record的指针，这个<code>record</code>的代码如下:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="k">typedef</span> <span class="k">struct</span> <span class="n">ssl3_record_st</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="kt">int</span> <span class="n">type</span><span class="p">;</span>               <span class="cm">/* type of record */</span>
</span><span class="line">        <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">length</span><span class="p">;</span>    <span class="cm">/* How many bytes available */</span>
</span><span class="line">        <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">off</span><span class="p">;</span>       <span class="cm">/* read/write offset into &#39;buf&#39; */</span>
</span><span class="line">        <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">data</span><span class="p">;</span>    <span class="cm">/* pointer to the record data */</span>
</span><span class="line">        <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">input</span><span class="p">;</span>   <span class="cm">/* where the decode bytes are */</span>
</span><span class="line">        <span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">comp</span><span class="p">;</span>    <span class="cm">/* only used with decompression - malloc()ed */</span>
</span><span class="line">        <span class="kt">unsigned</span> <span class="kt">long</span> <span class="n">epoch</span><span class="p">;</span>    <span class="cm">/* epoch number, needed by DTLS1 */</span>
</span><span class="line">        <span class="kt">unsigned</span> <span class="kt">char</span> <span class="n">seq_num</span><span class="p">[</span><span class="mi">8</span><span class="p">];</span> <span class="cm">/* sequence number, needed by DTLS1 */</span>
</span><span class="line">    <span class="p">}</span> <span class="n">SSL3_RECORD</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>可以看到，每个<code>record</code>有它的<code>type</code>、<code>length</code>和<code>data</code>，规规矩矩。</p>

<p>回到<code>dtls1_process_heartbeat</code>：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cm">/* Read type and payload length first */</span>
</span><span class="line"><span class="n">hbtype</span> <span class="o">=</span> <span class="o">*</span><span class="n">p</span><span class="o">++</span><span class="p">;</span>
</span><span class="line"><span class="n">n2s</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">payload</span><span class="p">);</span>
</span><span class="line"><span class="n">pl</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到<code>SSLv3 record</code>的第一个byte就是放这个<code>heartbeat</code>的<code>type</code>。 宏<code>n2s</code> 则是从<code>p</code>里面取两个byte放到payload里面，被用来作为payload的长度。 <strong>注意这里并没有检查<code>SSLv3 record</code> 实际的长度。</strong> </p>

<p>接下来在这个函数里面干了下面这些事情：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="kt">unsigned</span> <span class="kt">char</span> <span class="o">*</span><span class="n">buffer</span><span class="p">,</span> <span class="o">*</span><span class="n">bp</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">r</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="cm">/* Allocate memory for the response, size is 1 byte</span>
</span><span class="line"><span class="cm"> * message type, plus 2 bytes payload length, plus</span>
</span><span class="line"><span class="cm"> * payload, plus padding</span>
</span><span class="line"><span class="cm"> */</span>
</span><span class="line"><span class="n">buffer</span> <span class="o">=</span> <span class="n">OPENSSL_malloc</span><span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="n">padding</span><span class="p">);</span>
</span><span class="line"><span class="n">bp</span> <span class="o">=</span> <span class="n">buffer</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以看到，用户要多少程序就分配多少，最多可以分配到<code>65535+1+2+16</code>，指针bp被用来操作这块内存。然后：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cm">/* Enter response type, length and copy payload */</span>
</span><span class="line"><span class="o">*</span><span class="n">bp</span><span class="o">++</span> <span class="o">=</span> <span class="n">TLS1_HB_RESPONSE</span><span class="p">;</span>
</span><span class="line"><span class="n">s2n</span><span class="p">(</span><span class="n">payload</span><span class="p">,</span> <span class="n">bp</span><span class="p">);</span>
</span><span class="line"><span class="n">memcpy</span><span class="p">(</span><span class="n">bp</span><span class="p">,</span> <span class="n">pl</span><span class="p">,</span> <span class="n">payload</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>宏<code> s2n</code>把<code>n2s</code>做的操作恢复出来：先拿16个bit的值放到2个byte里面，也就是原来请求的payload的长度。然后把<code>pl</code>里面放的payload(请求者提交的data)拷贝到新分配的<code>bp</code>里面。</p>

<p>看起来是很平常的操作，只不过没有认真的检查用户输入而已，但问题也就在这里了。</p>

<h2 id="where-is-the-bug">Where is the bug</h2>

<p>如果用户并没有正在提交声称的那么多个bytes的payload，那么memcpy就会读到同一个process里面SSLv3 record附近的内存内容。</p>

<p>这附近有哪些内容呢？</p>

<p>首先要明白在linux上，内存的动态分配主要是通过<a href="http://linux.die.net/man/2/sbrk">sbrk</a> 或者是 <a href="http://man7.org/linux/man-pages/man2/mmap.2.html">mmap</a>。如果内存是通过sbrk分配的，它会使用<code>heap-grows-up</code>规则，泄露出来的东西不会那么多（但是如果是同时并发请求<a href="http://blog.existentialize.com/diagnosis-of-the-openssl-heartbleed-bug.html#fn:update">还是有东西会漏</a>）。</p>

<p>在这里，<code>pl</code>因为malloc里面的mmap_threshhold多半是sbrk分配的，但是，那些关键的用户数据，则多半是通过mmap分配内存。于是这些数据就会被攻击者用<code>pl</code>拿到。如果再考虑并发请求，就…</p>

<h2 id="the-fix">The fix</h2>

<p>所以，整个patch里面最主要的fix就是：
* 检查是否有长度为0的虚假heartbeat
* 检查record的真实长度</p>

<p>代码如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="cm">/* Read type and payload length first */</span>
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">+</span> <span class="mi">16</span> <span class="o">&gt;</span> <span class="n">s</span><span class="o">-&gt;</span><span class="n">s3</span><span class="o">-&gt;</span><span class="n">rrec</span><span class="p">.</span><span class="n">length</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> <span class="cm">/* silently discard */</span>
</span><span class="line"><span class="n">hbtype</span> <span class="o">=</span> <span class="o">*</span><span class="n">p</span><span class="o">++</span><span class="p">;</span>
</span><span class="line"><span class="n">n2s</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">payload</span><span class="p">);</span>
</span><span class="line"><span class="k">if</span> <span class="p">(</span><span class="mi">1</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">+</span> <span class="n">payload</span> <span class="o">+</span> <span class="mi">16</span> <span class="o">&gt;</span> <span class="n">s</span><span class="o">-&gt;</span><span class="n">s3</span><span class="o">-&gt;</span><span class="n">rrec</span><span class="p">.</span><span class="n">length</span><span class="p">)</span>
</span><span class="line">    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> <span class="cm">/* silently discard per RFC 6520 sec. 4 */</span>
</span><span class="line"><span class="n">pl</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="so">So?</h2>

<p>这个bug大概算是影响这么剧烈的bug里面最好明白的一个，所以居然我也看明白了。感受：</p>

<ul>
  <li>为了可扩展性引入了复杂度，经常都会带来恶梦</li>
  <li>用户的输入，无论如何都不能相信，一定要check</li>
  <li>C语言的确是大牛小牛都会踩到坑啊</li>
</ul>

]]></content>
  </entry>
  
</feed>
