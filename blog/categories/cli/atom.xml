<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cli | @Lenciel]]></title>
  <link href="http://lenciel.cn/blog/categories/cli/atom.xml" rel="self"/>
  <link href="http://lenciel.cn/"/>
  <updated>2014-10-08T20:44:01+08:00</updated>
  <id>http://lenciel.cn/</id>
  <author>
    <name><![CDATA[Lenciel Li]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Better Git Log]]></title>
    <link href="http://lenciel.cn/2013/06/better-git-log/"/>
    <updated>2013-06-08T23:42:00+08:00</updated>
    <id>http://lenciel.cn/2013/06/better-git-log</id>
    <content type="html"><![CDATA[<p>看烦了 <code>git log</code> 的白净输出？</p>

<p><img src="/downloads/images/git_raw.png" alt="Raw git log output" title="Don't touch me..." /></p>

<p>这个看起来如何？</p>

<p><img src="/downloads/images/git_graph.png" alt="Git graph log output" title="Don't touch me..." /></p>

<p>用起来其实很简单，只需要：</p>

<p><code>bash
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit
</code></p>

<p>这么长当然是记不住的，可以建shell的alias，也可以添加一个git alias：</p>

<p><code>bash
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset' --abbrev-commit
</code></p>

<p>这样每次只需要：</p>

<p><code>bash
git lg
</code></p>

<p>如果你是想知道具体发生了哪些修改可以：</p>

<p><code>bash
git lg -p
</code></p>

<p><img src="/downloads/images/git_p.png" alt="Git graph log output with p" title="Don't touch me..." /></p>

<p>不过我现在更喜欢的是直接用<a href="https://github.com/jonas/tig">tig</a>：</p>

<p><img src="/downloads/images/tig.png" alt="Tig output" title="Don't touch me..." /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用paramiko进行ssh工作]]></title>
    <link href="http://lenciel.cn/2009/04/ssh-using-paramiko/"/>
    <updated>2009-04-23T00:37:00+08:00</updated>
    <id>http://lenciel.cn/2009/04/ssh-using-paramiko</id>
    <content type="html"><![CDATA[<p>最近在单位写一个自动build的小工具。因为clearcase的<code>setview</code>命令实际上是激活一个新的<code>shell</code>，所以用简单的“串通”<code>shell</code>的脚本很难做到。</p>

<p>因为在邮件组里面看到有同样问题的Matt说用<code>paramiko</code>解决了问题，就试了试，过程还颇有点艰辛。</p>

<p>首先，<code>paramiko</code>没有直接的<code>msi</code>或者<code>exe</code>版本给<code>Windows</code>用户下载，而是需要在本地进行编译。而且<code>python</code>的<code>easy_install</code>工具在Vista下面会报错，所以至少花了十几分钟才算安装完毕。</p>

<p>结果在用test.py验证安装的时候就报错了，说什么：</p>

<p><code>python
paramiko.SSHException: No suitable address
</code></p>

<p>安装是我自己一步步弄得，难道搞错了？只好照着demo写了一个sftp的脚本，发现是可以跑的，干。</p>

<p>只好丢了封信给邮件组，然后自己开始找是啥问题。丢给邮件组的信至今没有回音（人气不行啊，<code>paramiko</code>），问题还是找到了。原来是1.7.5的<code>paramiko</code>增加了对ipv6的支持，结果引入了错误。更新了<code>client.py</code>后重新编译就可以用了。</p>

<p>最后，虽然demo的例子也挺多，但是好像没有说清楚怎么用invoke_shell和get_pty以及照例奉上一段代码。</p>

<p>{% include_code paramiko_sample.py lang:python %}</p>

]]></content>
  </entry>
  
</feed>
